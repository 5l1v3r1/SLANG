
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001890.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:printf:__format": types.Ptr(to=types.Int8),
    "v:fred:p": types.Int32,
    "v:fprintfptr": types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[types.Ptr(to=types.Struct("s:_IO_FILE")), types.Ptr(to=types.Int8)], variadic=True)),
    "v:main:t.2": types.Int32,
    "v:stdout": types.Ptr(to=types.Struct("s:_IO_FILE")),
    "v:f": types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[types.Int32])),
    "v:main:t.1": UnknownType.,
  }, # end allVars dict

  allObjs = {
    "s:_IO_marker":
      types.Struct(
        name = "s:_IO_marker",
        fields = [
          ("_next", types.Ptr(to=types.Struct("s:_IO_marker"))),
          ("_sbuf", types.Ptr(to=types.Struct("s:_IO_FILE"))),
          ("_pos", types.Int32),
        ],
        loc = Loc(160,1),
      ),

    "s:_IO_FILE":
      types.Struct(
        name = "s:_IO_FILE",
        fields = [
          ("_flags", types.Int32),
          ("_IO_read_ptr", types.Ptr(to=types.Int8)),
          ("_IO_read_end", types.Ptr(to=types.Int8)),
          ("_IO_read_base", types.Ptr(to=types.Int8)),
          ("_IO_write_base", types.Ptr(to=types.Int8)),
          ("_IO_write_ptr", types.Ptr(to=types.Int8)),
          ("_IO_write_end", types.Ptr(to=types.Int8)),
          ("_IO_buf_base", types.Ptr(to=types.Int8)),
          ("_IO_buf_end", types.Ptr(to=types.Int8)),
          ("_IO_save_base", types.Ptr(to=types.Int8)),
          ("_IO_backup_base", types.Ptr(to=types.Int8)),
          ("_IO_save_end", types.Ptr(to=types.Int8)),
          ("_markers", types.Ptr(to=types.Struct("s:_IO_marker"))),
          ("_chain", types.Ptr(to=types.Struct("s:_IO_FILE"))),
          ("_fileno", types.Int32),
          ("_flags2", types.Int32),
          ("_old_offset", types.Int32),
          ("_cur_column", types.UInt32),
          ("_vtable_offset", types.Int8),
          ("_shortbuf", types.ConstSizeArray(of=types.Int8, dim=1)),
          ("_lock", types.Ptr(to=types.Void)),
          ("_offset", types.Int32),
          ("__pad1", types.Ptr(to=types.Void)),
          ("__pad2", types.Ptr(to=types.Void)),
          ("__pad3", types.Ptr(to=types.Void)),
          ("__pad4", types.Ptr(to=types.Void)),
          ("__pad5", types.UInt32),
          ("_mode", types.Int32),
          ("_unused2", types.ConstSizeArray(of=types.Int8, dim=20)),
        ],
        loc = Loc(245,1),
      ),


    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(17,32)), expr.UnaryE(op.UO_DEREF, expr.VarE("v:f", Loc(17,33)), Loc(17,32)), Loc(17,32)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(17,31)), expr.CallE(expr.VarE("v:main:t.1", Loc(17,32)), [expr.LitE(24, Loc(17,36))], Loc(17,31)), Loc(17,31)),
            instr.CallI(expr.CallE(expr.VarE("v:fprintfptr", Loc(17,4)), [expr.VarE("v:stdout", Loc(17,15)), expr.LitE("""%d
""", Loc(17,23)), expr.VarE("v:main:t.2", Loc(17,31))], Loc(17,4))),
            instr.ReturnI(expr.LitE(0, Loc(19,11)), Loc(19,4)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

    "f:fred":
      obj.Func(
        name = "f:fred",
        paramNames = ["v:fred:p"],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(5,4)), [expr.LitE("""yo %d
""", Loc(5,11)), expr.VarE("v:fred:p", Loc(5,22))], Loc(5,4))),
            instr.ReturnI(expr.LitE(42, Loc(6,11)), Loc(6,4)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:fred() end. 

    "f:printf":
      obj.Func(
        name = "f:printf",
        paramNames = ["v:printf:__format"],
        variadic = True,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
        }, # basicBlocks end.

        bbEdges= {
        }, # bbEdges end
      ), # f:printf() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
