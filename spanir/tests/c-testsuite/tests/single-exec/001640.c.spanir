
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001640.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.26": types.Int32,
    "v:main:t.24": types.Int32,
    "v:main:t.23": types.Int32,
    "v:main:t.22": types.Int32,
    "v:main:t.20": types.Int32,
    "v:main:t.19": types.Int32,
    "v:main:t.18": types.Int32,
    "v:main:t.16": types.Int32,
    "v:main:t.15": types.Int32,
    "v:main:t.14": types.Int32,
    "v:main:t.12": types.Int32,
    "v:main:t.11": types.Int32,
    "v:main:t.10": types.Int32,
    "v:main:t.7": types.Int32,
    "v:main:t.9": types.Int32,
    "v:main:e": types.Int32,
    "v:main:t.13": types.Int32,
    "v:main:d": types.Int32,
    "v:main:t.8": types.Int32,
    "v:main:t.17": types.Int32,
    "v:main:c": types.Int32,
    "v:main:t.25": types.Int32,
    "v:main:a": types.Int32,
    "v:main:t.21": types.Int32,
    "v:main:b": types.Int32,
    "v:main:t.1": types.Int32,
    "v:main:x": types.Int32,
    "v:main:y": types.Int32,
    "v:main:t.6": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.4": types.Int32,
    "v:main:f": types.Int32,
    "v:main:t.5": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:a", Loc(14,4)), expr.LitE(12, Loc(14,8)), Loc(14,4)),
            instr.AssignI(expr.VarE("v:main:b", Loc(15,4)), expr.LitE(34, Loc(15,8)), Loc(15,4)),
            instr.AssignI(expr.VarE("v:main:c", Loc(16,4)), expr.LitE(56, Loc(16,8)), Loc(16,4)),
            instr.AssignI(expr.VarE("v:main:d", Loc(17,4)), expr.LitE(78, Loc(17,8)), Loc(17,4)),
            instr.AssignI(expr.VarE("v:main:e", Loc(18,4)), expr.LitE(0, Loc(18,8)), Loc(18,4)),
            instr.AssignI(expr.VarE("v:main:f", Loc(19,4)), expr.LitE(1, Loc(19,8)), Loc(19,4)),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(21,19)), expr.BinaryE(expr.VarE("v:main:c", Loc(21,19)), op.BO_ADD, expr.VarE("v:main:d", Loc(21,23)), Loc(21,19)), Loc(21,19)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(21,4)), [expr.LitE("""%d
""", Loc(21,11)), expr.VarE("v:main:t.1", Loc(21,19))], Loc(21,4)), Loc(21,4)),
            instr.AssignI(expr.VarE("v:main:y", Loc(22,20)), expr.BinaryE(expr.VarE("v:main:c", Loc(22,24)), op.BO_ADD, expr.VarE("v:main:d", Loc(22,28)), Loc(22,24)), Loc(22,20)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(22,4)), [expr.LitE("""%d
""", Loc(22,11)), expr.VarE("v:main:y", Loc(22,20))], Loc(22,4)), Loc(22,4)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(23,19)), expr.LitE(1, Loc(23,19)), Loc(23,19)),
            instr.CondI(expr.VarE("v:main:e", Loc(23,19)), "ExitLor1", "NextCheckLor1", Loc(23,19)),
            instr.LabelI("NextCheckLor1"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(23,24)), expr.LitE(1, Loc(23,24)), Loc(23,24)),
            instr.CondI(expr.VarE("v:main:e", Loc(23,24)), "NextCheckLand2", "TmpAssignLand2", Loc(23,24)),
            instr.LabelI("NextCheckLand2"),
            instr.CondI(expr.VarE("v:main:f", Loc(23,29)), "ExitLand2", "TmpAssignLand2", Loc(23,24)),
            instr.LabelI("TmpAssignLand2"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(23,24)), expr.LitE(0, Loc(23,24)), Loc(23,24)),
            instr.LabelI("ExitLand2"),
            instr.CondI(expr.VarE("v:main:t.3", Loc(23,24)), "ExitLor1", "TmpAssignLor1", Loc(23,19)),
            instr.LabelI("TmpAssignLor1"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(23,19)), expr.LitE(0, Loc(23,19)), Loc(23,19)),
            instr.LabelI("ExitLor1"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(23,4)), [expr.LitE("""%d
""", Loc(23,11)), expr.VarE("v:main:t.2", Loc(23,19))], Loc(23,4)), Loc(23,4)),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(24,19)), expr.LitE(1, Loc(24,19)), Loc(24,19)),
            instr.CondI(expr.VarE("v:main:e", Loc(24,19)), "ExitLor3", "NextCheckLor3", Loc(24,19)),
            instr.LabelI("NextCheckLor3"),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(24,24)), expr.LitE(1, Loc(24,24)), Loc(24,24)),
            instr.CondI(expr.VarE("v:main:f", Loc(24,24)), "NextCheckLand4", "TmpAssignLand4", Loc(24,24)),
            instr.LabelI("NextCheckLand4"),
            instr.CondI(expr.VarE("v:main:f", Loc(24,29)), "ExitLand4", "TmpAssignLand4", Loc(24,24)),
            instr.LabelI("TmpAssignLand4"),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(24,24)), expr.LitE(0, Loc(24,24)), Loc(24,24)),
            instr.LabelI("ExitLand4"),
            instr.CondI(expr.VarE("v:main:t.5", Loc(24,24)), "ExitLor3", "TmpAssignLor3", Loc(24,19)),
            instr.LabelI("TmpAssignLor3"),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(24,19)), expr.LitE(0, Loc(24,19)), Loc(24,19)),
            instr.LabelI("ExitLor3"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(24,4)), [expr.LitE("""%d
""", Loc(24,11)), expr.VarE("v:main:t.4", Loc(24,19))], Loc(24,4)), Loc(24,4)),
            instr.AssignI(expr.VarE("v:main:t.6", Loc(25,19)), expr.LitE(1, Loc(25,19)), Loc(25,19)),
            instr.AssignI(expr.VarE("v:main:t.7", Loc(25,19)), expr.LitE(1, Loc(25,19)), Loc(25,19)),
            instr.CondI(expr.VarE("v:main:e", Loc(25,19)), "NextCheckLand6", "TmpAssignLand6", Loc(25,19)),
            instr.LabelI("NextCheckLand6"),
            instr.CondI(expr.VarE("v:main:e", Loc(25,24)), "ExitLand6", "TmpAssignLand6", Loc(25,19)),
            instr.LabelI("TmpAssignLand6"),
            instr.AssignI(expr.VarE("v:main:t.7", Loc(25,19)), expr.LitE(0, Loc(25,19)), Loc(25,19)),
            instr.LabelI("ExitLand6"),
            instr.CondI(expr.VarE("v:main:t.7", Loc(25,19)), "ExitLor5", "NextCheckLor5", Loc(25,19)),
            instr.LabelI("NextCheckLor5"),
            instr.CondI(expr.VarE("v:main:f", Loc(25,29)), "ExitLor5", "TmpAssignLor5", Loc(25,19)),
            instr.LabelI("TmpAssignLor5"),
            instr.AssignI(expr.VarE("v:main:t.6", Loc(25,19)), expr.LitE(0, Loc(25,19)), Loc(25,19)),
            instr.LabelI("ExitLor5"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(25,4)), [expr.LitE("""%d
""", Loc(25,11)), expr.VarE("v:main:t.6", Loc(25,19))], Loc(25,4)), Loc(25,4)),
            instr.AssignI(expr.VarE("v:main:t.8", Loc(26,19)), expr.LitE(1, Loc(26,19)), Loc(26,19)),
            instr.AssignI(expr.VarE("v:main:t.9", Loc(26,19)), expr.LitE(1, Loc(26,19)), Loc(26,19)),
            instr.CondI(expr.VarE("v:main:e", Loc(26,19)), "NextCheckLand8", "TmpAssignLand8", Loc(26,19)),
            instr.LabelI("NextCheckLand8"),
            instr.CondI(expr.VarE("v:main:f", Loc(26,24)), "ExitLand8", "TmpAssignLand8", Loc(26,19)),
            instr.LabelI("TmpAssignLand8"),
            instr.AssignI(expr.VarE("v:main:t.9", Loc(26,19)), expr.LitE(0, Loc(26,19)), Loc(26,19)),
            instr.LabelI("ExitLand8"),
            instr.CondI(expr.VarE("v:main:t.9", Loc(26,19)), "ExitLor7", "NextCheckLor7", Loc(26,19)),
            instr.LabelI("NextCheckLor7"),
            instr.CondI(expr.VarE("v:main:f", Loc(26,29)), "ExitLor7", "TmpAssignLor7", Loc(26,19)),
            instr.LabelI("TmpAssignLor7"),
            instr.AssignI(expr.VarE("v:main:t.8", Loc(26,19)), expr.LitE(0, Loc(26,19)), Loc(26,19)),
            instr.LabelI("ExitLor7"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(26,4)), [expr.LitE("""%d
""", Loc(26,11)), expr.VarE("v:main:t.8", Loc(26,19))], Loc(26,4)), Loc(26,4)),
            instr.AssignI(expr.VarE("v:main:t.10", Loc(27,19)), expr.LitE(1, Loc(27,19)), Loc(27,19)),
            instr.CondI(expr.VarE("v:main:a", Loc(27,19)), "NextCheckLand9", "TmpAssignLand9", Loc(27,19)),
            instr.LabelI("NextCheckLand9"),
            instr.CondI(expr.BinaryE(expr.VarE("v:main:f", Loc(27,24)), op.BO_BIT_OR, expr.VarE("v:main:f", Loc(27,28)), Loc(27,24)), "ExitLand9", "TmpAssignLand9", Loc(27,19)),
            instr.LabelI("TmpAssignLand9"),
            instr.AssignI(expr.VarE("v:main:t.10", Loc(27,19)), expr.LitE(0, Loc(27,19)), Loc(27,19)),
            instr.LabelI("ExitLand9"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(27,4)), [expr.LitE("""%d
""", Loc(27,11)), expr.VarE("v:main:t.10", Loc(27,19))], Loc(27,4)), Loc(27,4)),
            instr.AssignI(expr.VarE("v:main:t.11", Loc(28,27)), expr.BinaryE(expr.VarE("v:main:c", Loc(28,27)), op.BO_BIT_AND, expr.VarE("v:main:d", Loc(28,31)), Loc(28,27)), Loc(28,27)),
            instr.AssignI(expr.VarE("v:main:t.12", Loc(28,23)), expr.BinaryE(expr.VarE("v:main:b", Loc(28,23)), op.BO_BIT_XOR, expr.VarE("v:main:t.11", Loc(28,27)), Loc(28,23)), Loc(28,23)),
            instr.AssignI(expr.VarE("v:main:t.13", Loc(28,19)), expr.BinaryE(expr.VarE("v:main:a", Loc(28,19)), op.BO_BIT_OR, expr.VarE("v:main:t.12", Loc(28,23)), Loc(28,19)), Loc(28,19)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(28,4)), [expr.LitE("""%d
""", Loc(28,11)), expr.VarE("v:main:t.13", Loc(28,19))], Loc(28,4)), Loc(28,4)),
            instr.AssignI(expr.VarE("v:main:t.14", Loc(29,23)), expr.BinaryE(expr.VarE("v:main:a", Loc(29,23)), op.BO_EQ, expr.VarE("v:main:a", Loc(29,28)), Loc(29,23)), Loc(29,23)),
            instr.AssignI(expr.VarE("v:main:t.15", Loc(29,31)), expr.BinaryE(expr.VarE("v:main:a", Loc(29,31)), op.BO_EQ, expr.VarE("v:main:b", Loc(29,36)), Loc(29,31)), Loc(29,31)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(29,4)), [expr.LitE("""%d, %d
""", Loc(29,11)), expr.VarE("v:main:t.14", Loc(29,23)), expr.VarE("v:main:t.15", Loc(29,31))], Loc(29,4)), Loc(29,4)),
            instr.AssignI(expr.VarE("v:main:t.16", Loc(30,23)), expr.BinaryE(expr.VarE("v:main:a", Loc(30,23)), op.BO_NE, expr.VarE("v:main:a", Loc(30,28)), Loc(30,23)), Loc(30,23)),
            instr.AssignI(expr.VarE("v:main:t.17", Loc(30,31)), expr.BinaryE(expr.VarE("v:main:a", Loc(30,31)), op.BO_NE, expr.VarE("v:main:b", Loc(30,36)), Loc(30,31)), Loc(30,31)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(30,4)), [expr.LitE("""%d, %d
""", Loc(30,11)), expr.VarE("v:main:t.16", Loc(30,23)), expr.VarE("v:main:t.17", Loc(30,31))], Loc(30,4)), Loc(30,4)),
            instr.AssignI(expr.VarE("v:main:t.18", Loc(31,19)), expr.LitE(1, Loc(31,19)), Loc(31,19)),
            instr.CondI(expr.BinaryE(expr.VarE("v:main:a", Loc(31,19)), op.BO_NE, expr.VarE("v:main:b", Loc(31,24)), Loc(31,19)), "NextCheckLand10", "TmpAssignLand10", Loc(31,19)),
            instr.LabelI("NextCheckLand10"),
            instr.CondI(expr.BinaryE(expr.VarE("v:main:c", Loc(31,29)), op.BO_NE, expr.VarE("v:main:d", Loc(31,34)), Loc(31,29)), "ExitLand10", "TmpAssignLand10", Loc(31,19)),
            instr.LabelI("TmpAssignLand10"),
            instr.AssignI(expr.VarE("v:main:t.18", Loc(31,19)), expr.LitE(0, Loc(31,19)), Loc(31,19)),
            instr.LabelI("ExitLand10"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(31,4)), [expr.LitE("""%d
""", Loc(31,11)), expr.VarE("v:main:t.18", Loc(31,19))], Loc(31,4)), Loc(31,4)),
            instr.AssignI(expr.VarE("v:main:t.19", Loc(32,23)), expr.BinaryE(expr.VarE("v:main:b", Loc(32,23)), op.BO_MUL, expr.VarE("v:main:c", Loc(32,27)), Loc(32,23)), Loc(32,23)),
            instr.AssignI(expr.VarE("v:main:t.20", Loc(32,23)), expr.BinaryE(expr.VarE("v:main:t.19", Loc(32,23)), op.BO_DIV, expr.VarE("v:main:f", Loc(32,31)), Loc(32,23)), Loc(32,23)),
            instr.AssignI(expr.VarE("v:main:t.21", Loc(32,19)), expr.BinaryE(expr.VarE("v:main:a", Loc(32,19)), op.BO_ADD, expr.VarE("v:main:t.20", Loc(32,23)), Loc(32,19)), Loc(32,19)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(32,4)), [expr.LitE("""%d
""", Loc(32,11)), expr.VarE("v:main:t.21", Loc(32,19))], Loc(32,4)), Loc(32,4)),
            instr.AssignI(expr.VarE("v:main:t.22", Loc(33,23)), expr.BinaryE(expr.VarE("v:main:b", Loc(33,23)), op.BO_MUL, expr.VarE("v:main:c", Loc(33,27)), Loc(33,23)), Loc(33,23)),
            instr.AssignI(expr.VarE("v:main:t.23", Loc(33,23)), expr.BinaryE(expr.VarE("v:main:t.22", Loc(33,23)), op.BO_DIV, expr.VarE("v:main:f", Loc(33,31)), Loc(33,23)), Loc(33,23)),
            instr.AssignI(expr.VarE("v:main:t.24", Loc(33,19)), expr.BinaryE(expr.VarE("v:main:a", Loc(33,19)), op.BO_ADD, expr.VarE("v:main:t.23", Loc(33,23)), Loc(33,19)), Loc(33,19)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(33,4)), [expr.LitE("""%d
""", Loc(33,11)), expr.VarE("v:main:t.24", Loc(33,19))], Loc(33,4)), Loc(33,4)),
            instr.AssignI(expr.VarE("v:main:t.25", Loc(34,20)), expr.BinaryE(expr.LitE(4, Loc(34,20)), ERROR:binOp, expr.LitE(4, Loc(34,25)), Loc(34,20)), Loc(34,20)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(34,4)), [expr.LitE("""%d
""", Loc(34,11)), expr.VarE("v:main:t.25", Loc(34,20))], Loc(34,4)), Loc(34,4)),
            instr.AssignI(expr.VarE("v:main:t.26", Loc(35,20)), expr.BinaryE(expr.LitE(64, Loc(35,20)), ERROR:binOp, expr.LitE(4, Loc(35,26)), Loc(35,20)), Loc(35,20)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(35,4)), [expr.LitE("""%d
""", Loc(35,11)), expr.VarE("v:main:t.26", Loc(35,20))], Loc(35,4)), Loc(35,4)),
            instr.ReturnI(expr.LitE(0, Loc(37,11))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
