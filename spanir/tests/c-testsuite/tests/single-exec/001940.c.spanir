
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001940.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.4": types.Int8,
    "v:main:t.3": types.Int8,
    "v:main:t.1": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:a": types.Int32,
    "v:main:b": types.Int8,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:a", Loc(8,4)), expr.LitE(0, Loc(8,8)), Loc(8,4)),
            instr.LabelI("WhileCond1"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(9,11)), expr.BinaryE(expr.VarE("v:main:a", Loc(9,11)), op.BO_LT, expr.LitE(2, Loc(9,15)), Loc(9,11)), Loc(9,11)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(9,11)), "WhileBody1", "WhileExit1", Loc(9,11)),
            instr.LabelI("WhileBody1"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(11,20)), expr.VarE("v:main:a", Loc(11,20)), Loc(11,20)),
            instr.AssignI(expr.VarE("v:main:a", Loc(11,20)), expr.BinaryE(expr.VarE("v:main:a", Loc(11,20)), op.BO_ADD, expr.LitE(1, Loc(11,20)), Loc(11,20)), Loc(11,20)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(11,7)), [expr.LitE("""%d""", Loc(11,14)), expr.VarE("v:main:t.2", Loc(11,20))], Loc(11,7)), Loc(11,7)),
            instr.GotoI("WhileExit1"),
            instr.AssignI(expr.VarE("v:main:b", Loc(14,7)), , Loc(14,7)),
            instr.LabelI("WhileCond2"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(15,14)), expr.BinaryE(expr.VarE("v:main:b", Loc(15,14)), op.BO_LT, , Loc(15,14)), Loc(15,14)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(15,14)), "WhileBody2", "WhileExit2", Loc(15,14)),
            instr.LabelI("WhileBody2"),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(17,23)), expr.VarE("v:main:b", Loc(17,23)), Loc(17,23)),
            instr.AssignI(expr.VarE("v:main:b", Loc(17,23)), expr.BinaryE(expr.VarE("v:main:b", Loc(17,23)), op.BO_ADD, expr.LitE(1, Loc(17,23)), Loc(17,23)), Loc(17,23)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(17,10)), [expr.LitE("""%c""", Loc(17,17)), expr.VarE("v:main:t.4", Loc(17,23))], Loc(17,10)), Loc(17,10)),
            instr.GotoI("WhileCond2"),
            instr.LabelI("WhileExit2"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(19,7)), [expr.LitE("""e""", Loc(19,14))], Loc(19,7)), Loc(19,7)),
            instr.GotoI("WhileCond1"),
            instr.LabelI("WhileExit1"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(21,4)), [expr.LitE("""
""", Loc(21,11))], Loc(21,4)), Loc(21,4)),
            instr.ReturnI(expr.LitE(0, Loc(23,11))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
