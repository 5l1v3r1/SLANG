
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000070.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:x": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          10: [
            instr.AssignI(expr.VarE("v:main:x", Loc(6,2)), expr.LitE(1, Loc(6,6)), Loc(6,2)),
            instr.AssignI(expr.VarE("v:main:x", Loc(7,6)), expr.LitE(10, Loc(7,10)), Loc(7,6)),
          ],

          9: [
            instr.CondI(expr.VarE("v:main:x", Loc(7,14)), Loc(7,2)),
          ],

          8: [
            instr.AssignI(expr.VarE("v:main:x", Loc(7,17)), expr.BinaryE(expr.VarE("v:main:x", Loc(7,21)), op.BO_SUB, expr.LitE(1, Loc(7,25))), Loc(7,17)),
          ],

          7: [
            instr.CondI(expr.VarE("v:main:x", Loc(9,5)), Loc(9,2)),
          ],

          6: [
            instr.ReturnI(expr.LitE(1, Loc(10,10)), Loc(10,3)),
          ],

          1: [
            instr.ReturnI(expr.VarE("v:main:x", Loc(14,9)), Loc(14,2)),
          ],

          -1: [
            instr.NopI(),
          ],

          0: [
            instr.NopI(),
          ],

          2: [
            instr.NopI(),
          ],

          3: [
            instr.AssignI(expr.VarE("v:main:x", Loc(13,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(13,7)), op.BO_SUB, expr.LitE(1, Loc(13,11))), Loc(13,3)),
          ],

          4: [
            instr.CondI(expr.VarE("v:main:x", Loc(12,8)), Loc(12,2)),
          ],

          5: [
            instr.AssignI(expr.VarE("v:main:x", Loc(11,2)), expr.LitE(10, Loc(11,6)), Loc(11,2)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (2, 4, types.UnCondEdge),
          (3, 2, types.UnCondEdge),
          (4, 3, types.TrueEdge),
          (4, 1, types.FalseEdge),
          (5, 4, types.UnCondEdge),
          (6, 0, types.UnCondEdge),
          (7, 6, types.TrueEdge),
          (7, 5, types.FalseEdge),
          (8, 9, types.UnCondEdge),
          (9, 8, types.TrueEdge),
          (9, 7, types.FalseEdge),
          (10, 9, types.UnCondEdge),
          (-1, 10, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
