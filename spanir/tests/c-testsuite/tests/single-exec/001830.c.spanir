
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001830.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.6": types.Int32,
    "v:main:t.1": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.4": types.Int32,
    "v:main:Count": types.Int32,
    "v:main:t.5": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:Count", Loc(7,9)), expr.LitE(0, Loc(7,17)), Loc(7,9)),
            instr.LabelI("ForCond1"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(7,20)), expr.BinaryE(expr.VarE("v:main:Count", Loc(7,20)), op.BO_LT, expr.LitE(10, Loc(7,28)), Loc(7,20)), Loc(7,20)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(7,20)), "ForBody1", "ForExit1", Loc(7,20)),
            instr.LabelI("ForBody1"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(9,23)), expr.BinaryE(expr.VarE("v:main:Count", Loc(9,23)), op.BO_LT, expr.LitE(5, Loc(9,31)), Loc(9,23)), Loc(9,23)),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(9,37)), expr.BinaryE(expr.VarE("v:main:Count", Loc(9,37)), op.BO_MUL, expr.VarE("v:main:Count", Loc(9,43)), Loc(9,37)), Loc(9,37)),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(9,53)), expr.BinaryE(expr.VarE("v:main:Count", Loc(9,53)), op.BO_MUL, expr.LitE(3, Loc(9,61)), Loc(9,53)), Loc(9,53)),
            instr.AssignI(expr.VarE("v:main:t.5", ), expr.SelectE(expr.VarE("v:main:t.2", Loc(9,23)), expr.VarE("v:main:t.3", Loc(9,37)), expr.VarE("v:main:t.4", Loc(9,53)), Loc(9,22)), ),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(9,7)), [expr.LitE("""%d
""", Loc(9,14)), expr.VarE("v:main:t.5", )], Loc(9,7)), Loc(9,7)),
            instr.AssignI(expr.VarE("v:main:t.6", Loc(7,32)), expr.VarE("v:main:Count", Loc(7,32)), Loc(7,32)),
            instr.AssignI(expr.VarE("v:main:Count", Loc(7,32)), expr.BinaryE(expr.VarE("v:main:Count", Loc(7,32)), op.BO_ADD, expr.LitE(1, Loc(7,32)), Loc(7,32)), Loc(7,32)),
            instr.GotoI("ForCond1"),
            instr.LabelI("ForExit1"),
            instr.ReturnI(expr.LitE(0, Loc(12,11))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
