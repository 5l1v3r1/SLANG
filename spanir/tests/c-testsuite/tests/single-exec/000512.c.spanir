
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000512.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.3": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:x": types.Int32,
    "v:main:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:x", Loc(2,3)), expr.LitE(10, Loc(2,11)), Loc(2,3)),
            instr.LabelI("CaseCond1-0"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(5,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(3,10)), op.BO_EQ, expr.LitE(10, Loc(5,12)), Loc(5,7)), Loc(5,7)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(5,7)), "CaseBody1-0", "CaseCond1-1", Loc(5,7)),
            instr.LabelI("CaseBody1-0"),
            instr.ReturnI(expr.LitE(111, Loc(6,16))),
            instr.LabelI("CaseCond1-1"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(8,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(3,10)), op.BO_EQ, expr.LitE(20, Loc(8,12)), Loc(8,7)), Loc(8,7)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(8,7)), "CaseBody1-1", "Default1", Loc(8,7)),
            instr.LabelI("CaseBody1-1"),
            instr.ReturnI(expr.LitE(222, Loc(9,16))),
            instr.LabelI("CaseCond1-2"),
            instr.LabelI("Default1"),
            instr.ReturnI(expr.LitE(333, Loc(15,16))),
            instr.LabelI("SwitchExit1"),
            instr.LabelI(""),
            instr.LabelI("Default2"),
            instr.ReturnI(expr.LitE(444, Loc(21,12))),
            instr.LabelI("SwitchExit2"),
            instr.LabelI("CaseCond3-0"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(24,5)), expr.BinaryE(expr.VarE("v:main:x", Loc(23,10)), op.BO_EQ, expr.LitE(1, Loc(24,10)), Loc(24,5)), Loc(24,5)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(24,5)), "CaseBody3-0", "Default3", Loc(24,5)),
            instr.LabelI("CaseBody3-0"),
            instr.LabelI("CaseCond3-1"),
            instr.LabelI("Default3"),
            instr.LabelI("SwitchExit3"),
            instr.ReturnI(expr.LitE(0, Loc(33,10))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
