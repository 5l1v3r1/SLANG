
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001440.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.4": types.Int32,
    "v:main:q": types.Ptr(to=types.Int32),
    "v:main:p": types.Ptr(to=types.Void),
    "v:main:t.2": types.Ptr(to=types.Void),
    "v:main:i": types.Int32,
    "v:main:t.3": types.Ptr(to=types.Void),
    "v:main:t.1": types.Ptr(to=types.Void),
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:i", Loc(7,2)), expr.SelectE(expr.VarE("v:main:i", Loc(7,6)), expr.LitE(0, Loc(7,10)), expr.LitE(0, Loc(7,14)), Loc(7,6)), Loc(7,2)),
            instr.AssignI(expr.VarE("v:main:t.1", ), expr.CastE(expr.LitE(0, Loc(8,19)), types.Ptr(to=types.Void), Loc(8,10)), ),
            instr.AssignI(expr.VarE("v:main:p", Loc(8,2)), expr.SelectE(expr.VarE("v:main:i", Loc(8,6)), expr.VarE("v:main:t.1", ), expr.LitE(0, Loc(8,23)), Loc(8,6)), Loc(8,2)),
            instr.AssignI(expr.VarE("v:main:t.2", ), expr.CastE(expr.LitE(0, Loc(9,23)), types.Ptr(to=types.Void), Loc(9,14)), ),
            instr.AssignI(expr.VarE("v:main:p", Loc(9,2)), expr.SelectE(expr.VarE("v:main:i", Loc(9,6)), expr.LitE(0, Loc(9,10)), expr.VarE("v:main:t.2", ), Loc(9,6)), Loc(9,2)),
            instr.AssignI(expr.VarE("v:main:t.3", ), expr.CastE(expr.LitE(0, Loc(10,29)), types.Ptr(to=types.Void), Loc(10,14)), ),
            instr.AssignI(expr.VarE("v:main:p", Loc(10,2)), expr.SelectE(expr.VarE("v:main:i", Loc(10,6)), expr.LitE(0, Loc(10,10)), expr.VarE("v:main:t.3", ), Loc(10,6)), Loc(10,2)),
            instr.AssignI(expr.VarE("v:main:q", Loc(11,2)), expr.SelectE(expr.VarE("v:main:i", Loc(11,6)), expr.LitE(0, Loc(11,10)), expr.VarE("v:main:p", Loc(11,14)), Loc(11,6)), Loc(11,2)),
            instr.AssignI(expr.VarE("v:main:q", Loc(12,2)), expr.SelectE(expr.VarE("v:main:i", Loc(12,6)), expr.VarE("v:main:p", Loc(12,10)), expr.LitE(0, Loc(12,14)), Loc(12,6)), Loc(12,2)),
            instr.AssignI(expr.VarE("v:main:q", Loc(13,2)), expr.SelectE(expr.VarE("v:main:i", Loc(13,6)), expr.VarE("v:main:q", Loc(13,10)), expr.LitE(0, Loc(13,14)), Loc(13,6)), Loc(13,2)),
            instr.AssignI(expr.VarE("v:main:q", Loc(14,2)), expr.SelectE(expr.VarE("v:main:i", Loc(14,6)), expr.LitE(0, Loc(14,10)), expr.VarE("v:main:q", Loc(14,14)), Loc(14,6)), Loc(14,2)),
            instr.AssignI(expr.VarE("v:main:t.4", ), expr.CastE(expr.VarE("v:main:q", Loc(16,15)), types.Int32, Loc(16,9)), ),
            instr.ReturnI(expr.VarE("v:main:t.4", )),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
