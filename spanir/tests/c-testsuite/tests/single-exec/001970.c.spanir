
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001970.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "": ,
    "v:fred": types.Int32,
    "": ,
    "v:henry:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(16,4)), [expr.LitE("""%d
""", Loc(16,11)), expr.VarE("", Loc(16,19))], Loc(16,4)), Loc(16,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:henry", Loc(17,4)), Loc(17,4)), Loc(17,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:henry", Loc(18,4)), Loc(18,4)), Loc(18,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:henry", Loc(19,4)), Loc(19,4)), Loc(19,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:henry", Loc(20,4)), Loc(20,4)), Loc(20,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(21,4)), [expr.LitE("""%d
""", Loc(21,11)), expr.VarE("", Loc(21,19))], Loc(21,4)), Loc(21,4)),
            instr.AssignI(expr.VarE("", Loc(22,4)), expr.LitE(8901, Loc(22,11)), Loc(22,4)),
            instr.AssignI(expr.VarE("", Loc(23,4)), expr.LitE(2345, Loc(23,10)), Loc(23,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(24,4)), [expr.LitE("""%d
""", Loc(24,11)), expr.VarE("", Loc(24,19))], Loc(24,4)), Loc(24,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(25,4)), [expr.LitE("""%d
""", Loc(25,11)), expr.VarE("", Loc(25,19))], Loc(25,4)), Loc(25,4)),
            instr.ReturnI(expr.LitE(0, Loc(27,11))),
        ], # instrSeq end.
      ), # f:main() end. 

    "f:henry":
      obj.Func(
        name = "f:henry",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:fred", Loc(8,4)), expr.LitE(4567, Loc(8,22)), Loc(8,4)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(10,4)), [expr.LitE("""%d
""", Loc(10,11)), expr.VarE("v:fred", Loc(10,19))], Loc(10,4)), Loc(10,4)),
            instr.AssignI(expr.VarE("v:henry:t.1", Loc(11,4)), expr.VarE("v:fred", Loc(11,4)), Loc(11,4)),
            instr.AssignI(expr.VarE("v:fred", Loc(11,4)), expr.BinaryE(expr.VarE("v:fred", Loc(11,4)), op.BO_ADD, expr.LitE(1, Loc(11,4)), Loc(11,4)), Loc(11,4)),
        ], # instrSeq end.
      ), # f:henry() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
