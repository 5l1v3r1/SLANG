
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001650.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.3": types.Int32,
    "v:main:t.2": types.Int32,
    "v:printf:__format": types.Ptr(to=types.Int8),
    "v:main:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:printf":
      obj.Func(
        name = "f:printf",
        paramNames = ["v:printf:__format"],
        variadic = True,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
        }, # basicBlocks end.

        bbEdges= {
        }, # bbEdges end
      ), # f:printf() end. 

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(8,4)), [expr.LitE("""%d
""", Loc(8,11)), expr.LitE(12, Loc(8,19))], Loc(8,4))),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(9,27)), expr.BinaryE(expr.LitE(12, Loc(9,27)), op.BO_MUL, expr.LitE(1, Loc(9,27))), Loc(9,27)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(9,38)), expr.BinaryE(expr.LitE(12, Loc(9,38)), op.BO_MUL, expr.LitE(2, Loc(9,38))), Loc(9,38)),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(9,49)), expr.BinaryE(expr.LitE(12, Loc(9,49)), op.BO_MUL, expr.LitE(3, Loc(9,49))), Loc(9,49)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(9,4)), [expr.LitE("""%d, %d, %d
""", Loc(9,11)), expr.VarE("v:main:t.3", Loc(9,27)), expr.VarE("v:main:t.2", Loc(9,38)), expr.VarE("v:main:t.1", Loc(9,49))], Loc(9,4))),
            instr.ReturnI(expr.LitE(0, Loc(11,11)), Loc(11,4)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
