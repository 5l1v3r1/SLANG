
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "002100.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:printf:p.1": types.Ptr(to=types.Int8),
    "v:main:b": types.Int32,
    "v:main:t.1": types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[])),
    "v:main:function_pointer": types.Ptr(to=types.Void),
    "v:main:t.2": types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[])),
    "v:main:a": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:printf":
      obj.Func(
        name = "f:printf",
        paramNames = ["v:printf:p.1"],
        variadic = True,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
        }, # basicBlocks end.

        bbEdges= {
        }, # bbEdges end
      ), # f:printf() end. 

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.AssignI(expr.VarE("v:main:function_pointer", Loc(29,5)), expr.UnaryE(op.UO_ADDROF, expr.FuncE("f:actual_function", Loc(29,31)), Loc(29,30)), Loc(29,5)),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(31,14)), expr.CastE(expr.VarE("v:main:function_pointer", Loc(31,35)), types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[])), Loc(31,14)), Loc(31,14)),
            instr.AssignI(expr.VarE("v:main:a", Loc(31,5)), expr.CallE(expr.VarE("v:main:t.1", Loc(31,14)), [], Loc(31,13)), Loc(31,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(32,5)), [expr.LitE("""%i
""", Loc(32,12)), expr.VarE("v:main:a", Loc(32,20))], Loc(32,5))),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(36,15)), expr.CastE(expr.VarE("v:main:function_pointer", Loc(36,36)), types.Ptr(to=types.FuncSig(returnType=types.Int32, paramTypes=[])), Loc(36,15)), Loc(36,15)),
            instr.AssignI(expr.VarE("v:main:b", Loc(36,5)), expr.CallE(expr.VarE("v:main:t.2", Loc(36,15)), [], Loc(36,13)), Loc(36,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(37,5)), [expr.LitE("""%i
""", Loc(37,12)), expr.VarE("v:main:b", Loc(37,20))], Loc(37,5))),
            instr.ReturnI(expr.LitE(0, Loc(39,12)), Loc(39,5)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

    "f:foo":
      obj.Func(
        name = "f:foo",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          -1: [
            instr.NopI(),
          ],

          0: [
            instr.NopI(),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (-1, 0, types.UnCondEdge),
        }, # bbEdges end
      ), # f:foo() end. 

    "f:actual_function":
      obj.Func(
        name = "f:actual_function",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.ReturnI(expr.LitE(42, Loc(23,10)), Loc(23,3)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:actual_function() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
