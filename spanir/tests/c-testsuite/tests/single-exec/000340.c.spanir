
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000340.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.4": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:x": types.Int32,
    "v:main:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:x", Loc(6,2)), expr.LitE(0, Loc(6,6)), Loc(6,2)),
            instr.LabelI("WhileCond1"),
            instr.CondI(expr.LitE(1, Loc(7,8)), "WhileBody1", "WhileExit1", Loc(7,8)),
            instr.LabelI("WhileBody1"),
            instr.GotoI("WhileExit1"),
            instr.GotoI("WhileCond1"),
            instr.LabelI("WhileExit1"),
            instr.LabelI("WhileCond2"),
            instr.CondI(expr.LitE(1, Loc(9,8)), "WhileBody2", "WhileExit2", Loc(9,8)),
            instr.LabelI("WhileBody2"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(10,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(10,7)), op.BO_EQ, expr.LitE(5, Loc(10,12)), Loc(10,7)), Loc(10,7)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(10,7)), "IfTrue3", "IfFalse3", Loc(10,7)),
            instr.LabelI("IfTrue3"),
            instr.GotoI("WhileExit2"),
            instr.GotoI("IfExit3"),
            instr.LabelI("IfFalse3"),
            instr.LabelI("IfExit3"),
            instr.AssignI(expr.VarE("v:main:x", Loc(13,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(13,7)), op.BO_ADD, expr.LitE(1, Loc(13,11)), Loc(13,7)), Loc(13,3)),
            instr.GotoI("WhileCond2"),
            instr.GotoI("WhileCond2"),
            instr.LabelI("WhileExit2"),
            instr.LabelI("ForCond4"),
            instr.CondI(expr.LitE(1), "ForBody4", "ForExit4", Loc(16,2)),
            instr.LabelI("ForBody4"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(17,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(17,7)), op.BO_EQ, expr.LitE(10, Loc(17,12)), Loc(17,7)), Loc(17,7)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(17,7)), "IfTrue5", "IfFalse5", Loc(17,7)),
            instr.LabelI("IfTrue5"),
            instr.GotoI("ForExit4"),
            instr.GotoI("IfExit5"),
            instr.LabelI("IfFalse5"),
            instr.LabelI("IfExit5"),
            instr.AssignI(expr.VarE("v:main:x", Loc(20,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(20,7)), op.BO_ADD, expr.LitE(1, Loc(20,11)), Loc(20,7)), Loc(20,3)),
            instr.GotoI("ForCond4"),
            instr.GotoI("ForCond4"),
            instr.LabelI("ForExit4"),
            instr.LabelI("DoEntry6"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(24,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(24,7)), op.BO_EQ, expr.LitE(15, Loc(24,12)), Loc(24,7)), Loc(24,7)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(24,7)), "IfTrue7", "IfFalse7", Loc(24,7)),
            instr.LabelI("IfTrue7"),
            instr.GotoI("DoExit6"),
            instr.GotoI("IfExit7"),
            instr.LabelI("IfFalse7"),
            instr.LabelI("IfExit7"),
            instr.AssignI(expr.VarE("v:main:x", Loc(27,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(27,7)), op.BO_ADD, expr.LitE(1, Loc(27,11)), Loc(27,7)), Loc(27,3)),
            instr.GotoI("DoCond6"),
            instr.LabelI("DoCond6"),
            instr.CondI(expr.LitE(1, Loc(29,10)), "DoEntry6", "DoExit6", Loc(29,10)),
            instr.LabelI("DoExit6"),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(30,9)), expr.BinaryE(expr.VarE("v:main:x", Loc(30,9)), op.BO_SUB, expr.LitE(15, Loc(30,13)), Loc(30,9)), Loc(30,9)),
            instr.ReturnI(expr.VarE("v:main:t.4", Loc(30,9))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
