
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000340.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.4": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:x": types.Int32,
    "v:main:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          20: [
            instr.AssignI(expr.VarE("v:main:x", Loc(6,2)), expr.LitE(0, Loc(6,6)), Loc(6,2)),
          ],

          19: [
            instr.CondI(expr.LitE(1, Loc(7,8)), Loc(7,2)),
          ],

          18: [
            instr.NopI(),
          ],

          17: [
            instr.NopI(),
          ],

          16: [
            instr.CondI(expr.LitE(1, Loc(9,8)), Loc(9,2)),
          ],

          5: [
            instr.AssignI(expr.VarE("v:main:t.2", Loc(24,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(24,7)), op.BO_EQ, expr.LitE(15, Loc(24,12))), Loc(24,7)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(24,7)), Loc(24,3)),
          ],

          4: [
            instr.NopI(),
          ],

          3: [
            instr.AssignI(expr.VarE("v:main:x", Loc(27,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(27,7)), op.BO_ADD, expr.LitE(1, Loc(27,11))), Loc(27,3)),
          ],

          2: [
            instr.CondI(expr.LitE(1, Loc(29,10)), Loc(23,2)),
          ],

          0: [
            instr.NopI(),
          ],

          1: [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(30,9)), expr.BinaryE(expr.VarE("v:main:x", Loc(30,9)), op.BO_SUB, expr.LitE(15, Loc(30,13))), Loc(30,9)),
            instr.ReturnI(expr.VarE("v:main:t.1", Loc(30,9)), Loc(30,2)),
          ],

          6: [
            instr.NopI(),
          ],

          7: [
            instr.NopI(),
          ],

          8: [
            instr.AssignI(expr.VarE("v:main:x", Loc(20,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(20,7)), op.BO_ADD, expr.LitE(1, Loc(20,11))), Loc(20,3)),
          ],

          9: [
            instr.NopI(),
          ],

          10: [
            instr.AssignI(expr.VarE("v:main:t.3", Loc(17,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(17,7)), op.BO_EQ, expr.LitE(10, Loc(17,12))), Loc(17,7)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(17,7)), Loc(17,3)),
          ],

          -1: [
            instr.NopI(),
          ],

          11: [
            instr.CondI(expr.LitE(1), Loc(16,2)),
          ],

          12: [
            instr.NopI(),
          ],

          13: [
            instr.AssignI(expr.VarE("v:main:x", Loc(13,3)), expr.BinaryE(expr.VarE("v:main:x", Loc(13,7)), op.BO_ADD, expr.LitE(1, Loc(13,11))), Loc(13,3)),
          ],

          14: [
            instr.NopI(),
          ],

          15: [
            instr.AssignI(expr.VarE("v:main:t.4", Loc(10,7)), expr.BinaryE(expr.VarE("v:main:x", Loc(10,7)), op.BO_EQ, expr.LitE(5, Loc(10,12))), Loc(10,7)),
            instr.CondI(expr.VarE("v:main:t.4", Loc(10,7)), Loc(10,3)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (2, 6, types.TrueEdge),
          (2, 0, types.FalseEdge),
          (3, 2, types.UnCondEdge),
          (4, 1, types.UnCondEdge),
          (5, 4, types.TrueEdge),
          (5, 3, types.FalseEdge),
          (6, 5, types.UnCondEdge),
          (7, 11, types.UnCondEdge),
          (8, 7, types.UnCondEdge),
          (9, 5, types.UnCondEdge),
          (10, 9, types.TrueEdge),
          (10, 8, types.FalseEdge),
          (11, 10, types.TrueEdge),
          (11, 0, types.FalseEdge),
          (12, 16, types.UnCondEdge),
          (13, 12, types.UnCondEdge),
          (14, 11, types.UnCondEdge),
          (15, 14, types.TrueEdge),
          (15, 13, types.FalseEdge),
          (16, 15, types.TrueEdge),
          (16, 0, types.FalseEdge),
          (17, 19, types.UnCondEdge),
          (18, 16, types.UnCondEdge),
          (19, 18, types.TrueEdge),
          (19, 0, types.FalseEdge),
          (20, 19, types.UnCondEdge),
          (-1, 20, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
