
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "002150.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:kb_wait_3:timeout": types.UInt32,
    "v:kb_wait_4:t.1": types.Int32,
    "v:kb_wait_1:timeout": types.UInt32,
    "v:kb_wait_4:t.2": types.UInt32,
    "v:kb_wait_4:timeout": types.UInt32,
    "v:kb_wait_2:timeout": types.UInt32,
    "v:kb_wait_2_1:timeout": types.UInt32,
    "v:kb_wait_2_2:timeout": types.UInt32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(103,5)), [expr.LitE("""begin
""", Loc(103,12))], Loc(103,5)), Loc(103,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_1", Loc(104,5)), Loc(104,5)), Loc(104,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_2", Loc(105,5)), Loc(105,5)), Loc(105,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_2_1", Loc(106,5)), Loc(106,5)), Loc(106,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_2_2", Loc(107,5)), Loc(107,5)), Loc(107,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_3", Loc(108,5)), Loc(108,5)), Loc(108,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:kb_wait_4", Loc(109,5)), Loc(109,5)), Loc(109,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(110,5)), [expr.LitE("""end
""", Loc(110,12))], Loc(110,5)), Loc(110,5)),
            instr.ReturnI(expr.LitE(0, Loc(111,12))),
        ], # instrSeq end.
      ), # f:main() end. 

    "f:kb_wait_2_2":
      obj.Func(
        name = "f:kb_wait_2_2",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_2_2:timeout", Loc(47,5)), expr.LitE(2, Loc(47,29)), Loc(47,5)),
            instr.LabelI("DoEntry4"),
            instr.AssignI(expr.VarE("v:kb_wait_2_2:t.1", Loc(50,13)), expr.CallE(expr.FuncE("f:printf", Loc(50,13)), [expr.LitE("""timeout=%ld
""", Loc(50,20)), expr.VarE("v:kb_wait_2_2:timeout", Loc(50,37))], Loc(50,13)), Loc(50,13)),
            instr.AssignI(expr.VarE("v:kb_wait_2_2:t.2", Loc(57,9)), expr.VarE("v:kb_wait_2_2:timeout", Loc(57,9)), Loc(57,9)),
            instr.AssignI(expr.VarE("v:kb_wait_2_2:timeout", Loc(57,9)), expr.BinaryE(expr.VarE("v:kb_wait_2_2:timeout", Loc(57,9)), op.BO_SUB, expr.LitE(1, Loc(57,9)), Loc(57,9)), Loc(57,9)),
            instr.LabelI("DoCond4"),
            instr.CondI(expr.VarE("v:kb_wait_2_2:timeout", Loc(58,14)), "DoEntry4", "DoExit4", Loc(58,14)),
            instr.LabelI("DoExit4"),
        ], # instrSeq end.
      ), # f:kb_wait_2_2() end. 

    "f:kb_wait_1":
      obj.Func(
        name = "f:kb_wait_1",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_1:timeout", Loc(4,5)), expr.LitE(2, Loc(4,29)), Loc(4,5)),
            instr.LabelI("DoEntry1"),
            instr.AssignI(expr.VarE("v:kb_wait_1:t.1", Loc(7,13)), expr.CallE(expr.FuncE("f:printf", Loc(7,13)), [expr.LitE("""timeout=%ld
""", Loc(7,20)), expr.VarE("v:kb_wait_1:timeout", Loc(7,37))], Loc(7,13)), Loc(7,13)),
            instr.AssignI(expr.VarE("v:kb_wait_1:t.2", Loc(13,9)), expr.VarE("v:kb_wait_1:timeout", Loc(13,9)), Loc(13,9)),
            instr.AssignI(expr.VarE("v:kb_wait_1:timeout", Loc(13,9)), expr.BinaryE(expr.VarE("v:kb_wait_1:timeout", Loc(13,9)), op.BO_SUB, expr.LitE(1, Loc(13,9)), Loc(13,9)), Loc(13,9)),
            instr.LabelI("DoCond1"),
            instr.CondI(expr.VarE("v:kb_wait_1:timeout", Loc(14,14)), "DoEntry1", "DoExit1", Loc(14,14)),
            instr.LabelI("DoExit1"),
        ], # instrSeq end.
      ), # f:kb_wait_1() end. 

    "f:kb_wait_3":
      obj.Func(
        name = "f:kb_wait_3",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_3:timeout", Loc(62,5)), expr.LitE(2, Loc(62,29)), Loc(62,5)),
            instr.LabelI("DoEntry5"),
            instr.AssignI(expr.VarE("v:kb_wait_3:t.1", Loc(65,13)), expr.CallE(expr.FuncE("f:printf", Loc(65,13)), [expr.LitE("""timeout=%ld
""", Loc(65,20)), expr.VarE("v:kb_wait_3:timeout", Loc(65,37))], Loc(65,13)), Loc(65,13)),
            instr.AssignI(expr.VarE("v:kb_wait_3:t.2", Loc(74,9)), expr.VarE("v:kb_wait_3:timeout", Loc(74,9)), Loc(74,9)),
            instr.AssignI(expr.VarE("v:kb_wait_3:timeout", Loc(74,9)), expr.BinaryE(expr.VarE("v:kb_wait_3:timeout", Loc(74,9)), op.BO_SUB, expr.LitE(1, Loc(74,9)), Loc(74,9)), Loc(74,9)),
            instr.LabelI("DoCond5"),
            instr.CondI(expr.VarE("v:kb_wait_3:timeout", Loc(75,14)), "DoEntry5", "DoExit5", Loc(75,14)),
            instr.LabelI("DoExit5"),
        ], # instrSeq end.
      ), # f:kb_wait_3() end. 

    "f:kb_wait_2":
      obj.Func(
        name = "f:kb_wait_2",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_2:timeout", Loc(18,5)), expr.LitE(2, Loc(18,29)), Loc(18,5)),
            instr.LabelI("DoEntry2"),
            instr.AssignI(expr.VarE("v:kb_wait_2:t.1", Loc(21,13)), expr.CallE(expr.FuncE("f:printf", Loc(21,13)), [expr.LitE("""timeout=%ld
""", Loc(21,20)), expr.VarE("v:kb_wait_2:timeout", Loc(21,37))], Loc(21,13)), Loc(21,13)),
            instr.AssignI(expr.VarE("v:kb_wait_2:t.2", Loc(27,9)), expr.VarE("v:kb_wait_2:timeout", Loc(27,9)), Loc(27,9)),
            instr.AssignI(expr.VarE("v:kb_wait_2:timeout", Loc(27,9)), expr.BinaryE(expr.VarE("v:kb_wait_2:timeout", Loc(27,9)), op.BO_SUB, expr.LitE(1, Loc(27,9)), Loc(27,9)), Loc(27,9)),
            instr.LabelI("DoCond2"),
            instr.CondI(expr.VarE("v:kb_wait_2:timeout", Loc(28,14)), "DoEntry2", "DoExit2", Loc(28,14)),
            instr.LabelI("DoExit2"),
        ], # instrSeq end.
      ), # f:kb_wait_2() end. 

    "f:kb_wait_2_1":
      obj.Func(
        name = "f:kb_wait_2_1",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_2_1:timeout", Loc(32,5)), expr.LitE(2, Loc(32,29)), Loc(32,5)),
            instr.LabelI("DoEntry3"),
            instr.AssignI(expr.VarE("v:kb_wait_2_1:t.1", Loc(35,13)), expr.CallE(expr.FuncE("f:printf", Loc(35,13)), [expr.LitE("""timeout=%ld
""", Loc(35,20)), expr.VarE("v:kb_wait_2_1:timeout", Loc(35,37))], Loc(35,13)), Loc(35,13)),
            instr.AssignI(expr.VarE("v:kb_wait_2_1:t.2", Loc(42,9)), expr.VarE("v:kb_wait_2_1:timeout", Loc(42,9)), Loc(42,9)),
            instr.AssignI(expr.VarE("v:kb_wait_2_1:timeout", Loc(42,9)), expr.BinaryE(expr.VarE("v:kb_wait_2_1:timeout", Loc(42,9)), op.BO_SUB, expr.LitE(1, Loc(42,9)), Loc(42,9)), Loc(42,9)),
            instr.LabelI("DoCond3"),
            instr.CondI(expr.VarE("v:kb_wait_2_1:timeout", Loc(43,14)), "DoEntry3", "DoExit3", Loc(43,14)),
            instr.LabelI("DoExit3"),
        ], # instrSeq end.
      ), # f:kb_wait_2_1() end. 

    "f:kb_wait_4":
      obj.Func(
        name = "f:kb_wait_4",
        paramNames = [],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:kb_wait_4:timeout", Loc(79,5)), expr.LitE(2, Loc(79,29)), Loc(79,5)),
            instr.LabelI("DoEntry6"),
            instr.AssignI(expr.VarE("v:kb_wait_4:t.1", Loc(82,13)), expr.CallE(expr.FuncE("f:printf", Loc(82,13)), [expr.LitE("""timeout=%ld
""", Loc(82,20)), expr.VarE("v:kb_wait_4:timeout", Loc(82,37))], Loc(82,13)), Loc(82,13)),
            instr.AssignI(expr.VarE("v:kb_wait_4:t.2", Loc(98,9)), expr.VarE("v:kb_wait_4:timeout", Loc(98,9)), Loc(98,9)),
            instr.AssignI(expr.VarE("v:kb_wait_4:timeout", Loc(98,9)), expr.BinaryE(expr.VarE("v:kb_wait_4:timeout", Loc(98,9)), op.BO_SUB, expr.LitE(1, Loc(98,9)), Loc(98,9)), Loc(98,9)),
            instr.LabelI("DoCond6"),
            instr.CondI(expr.VarE("v:kb_wait_4:timeout", Loc(99,14)), "DoEntry6", "DoExit6", Loc(99,14)),
            instr.LabelI("DoExit6"),
        ], # instrSeq end.
      ), # f:kb_wait_4() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
