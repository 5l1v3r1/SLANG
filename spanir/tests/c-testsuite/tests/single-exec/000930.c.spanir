
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000930.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.2": types.ConstSizeArray(of=types.Int32, dim=4),
    "v:a": types.ConstSizeArray(of=types.Int32, dim=4),
    "v:main:t.1": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          -1: [
            instr.NopI(),
          ],

          0: [
            instr.NopI(),
          ],

          1: [
            instr.ReturnI(expr.LitE(0, Loc(9,9)), Loc(9,2)),
          ],

          2: [
            instr.ReturnI(expr.LitE(1, Loc(7,10)), Loc(7,3)),
          ],

          3: [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(6,19)), expr.BinaryE(expr.LitE(4, Loc(6,19)), op.BO_MUL, expr.LitE(4, Loc(6,21))), Loc(6,19)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(6,6)), expr.BinaryE(expr.LitE(16, Loc(6,6)), op.BO_NE, expr.VarE("v:main:t.1", Loc(6,19))), Loc(6,6)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(6,6)), Loc(6,2)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (2, 0, types.UnCondEdge),
          (3, 0, types.TrueEdge),
          (3, 1, types.FalseEdge),
          (-1, 3, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
