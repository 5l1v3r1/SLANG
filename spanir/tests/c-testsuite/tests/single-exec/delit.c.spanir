
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "delit.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:y": types.Int32,
    "v:main:t.1": types.ConstSizeArray(of=types.ConstSizeArray(of=types.Int32, size=3), size=2),
    "v:main:arr": types.ConstSizeArray(of=types.ConstSizeArray(of=types.Int32, size=3), size=2),
    "v:main:x": types.Ptr(to=types.Int32),
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.ArrayE(expr.LitE(1, Loc(10,10)), expr.ArrayE(expr.LitE(0, Loc(10,7)), expr.VarE("v:main:arr", Loc(10,3)), Loc(10,3)), Loc(10,3)), expr.LitE(2, Loc(10,15)), Loc(10,3)),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(12,9)), expr.BinaryE(expr.VarE("v:main:arr", Loc(12,9)), op.BO_ADD, expr.LitE(1, Loc(12,13)), Loc(12,9)), Loc(12,9)),
            instr.AssignI(expr.VarE("v:main:x", Loc(12,3)), expr.UnaryE(op.UO_ADDROF, expr.ArrayE(expr.LitE(1, Loc(12,19)), expr.ArrayE(expr.LitE(0, Loc(12,16)), expr.VarE("v:main:t.1", Loc(12,9)), Loc(12,8)), Loc(12,8)), Loc(12,7)), Loc(12,3)),
            instr.AssignI(expr.VarE("v:main:y", Loc(13,3)), expr.ArrayE(expr.LitE(2, Loc(13,13)), expr.VarE("v:main:x", Loc(13,11)), Loc(13,11)), Loc(13,3)),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
