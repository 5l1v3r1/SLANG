
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000540.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.3": types.Int,
    "v:main:t.2": types.Int,
    "v:main:t.1": types.Int,
    "v:main:e": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          7: [
            instr.AssignI(expr.VarE("v:main:t.3", Loc(12,5)), expr.BinaryE(expr.LitE(0, Loc(12,5)), op.BO_NE, expr.LitE(0, Loc(12,10))), Loc(12,5)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(12,5)), Loc(12,2)),
          ],

          6: [
            instr.ReturnI(expr.LitE(1, Loc(13,10)), Loc(13,3)),
          ],

          5: [
            instr.AssignI(expr.VarE("v:main:t.2", Loc(14,5)), expr.BinaryE(expr.LitE(1, Loc(14,5)), op.BO_NE, expr.LitE(1, Loc(14,10))), Loc(14,5)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(14,5)), Loc(14,2)),
          ],

          -1: [
            instr.NopI(),
          ],

          4: [
            instr.ReturnI(expr.LitE(2, Loc(15,10)), Loc(15,3)),
          ],

          0: [
            instr.NopI(),
          ],

          1: [
            instr.AssignI(expr.VarE("v:main:e", Loc(19,2)), expr.LitE(0, Loc(19,6)), Loc(19,2)),
            instr.ReturnI(expr.VarE("v:main:e", Loc(20,9)), Loc(20,2)),
          ],

          2: [
            instr.ReturnI(expr.LitE(3, Loc(17,10)), Loc(17,3)),
          ],

          3: [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(16,5)), expr.BinaryE(expr.LitE(2, Loc(16,5)), op.BO_NE, expr.LitE(2, Loc(16,10))), Loc(16,5)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(16,5)), Loc(16,2)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (2, 0, types.UnCondEdge),
          (3, 0, types.TrueEdge),
          (3, 1, types.FalseEdge),
          (4, 0, types.UnCondEdge),
          (5, 0, types.TrueEdge),
          (5, 3, types.FalseEdge),
          (6, 0, types.UnCondEdge),
          (7, 0, types.TrueEdge),
          (7, 5, types.FalseEdge),
          (-1, 7, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
