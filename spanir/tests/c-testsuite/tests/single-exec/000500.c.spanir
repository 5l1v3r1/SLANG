
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000500.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.11": types.Int32,
    "v:main:t.10": types.Int32,
    "v:main:t.9": types.Int32,
    "v:main:t.8": types.Int32,
    "v:main:t.7": types.Int32,
    "v:main:t.6": types.Int32,
    "": ,
    "v:main:t.1": types.Int32,
    "": ,
    "v:main:t.2": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.4": types.Int32,
    "v:main:t.5": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(21,5)), expr.MemberE("a", expr.VarE("", Loc(21,5)), Loc(21,5)), Loc(21,5)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(21,5)), expr.BinaryE(expr.VarE("v:main:t.1", Loc(21,5)), op.BO_NE, expr.LitE(1, Loc(21,12)), Loc(21,5)), Loc(21,5)),
            instr.CondI(expr.VarE("v:main:t.2", Loc(21,5)), "IfTrue1", "IfFalse1", Loc(21,5)),
            instr.LabelI("IfTrue1"),
            instr.ReturnI(expr.LitE(1, Loc(22,10))),
            instr.GotoI("IfExit1"),
            instr.LabelI("IfFalse1"),
            instr.LabelI("IfExit1"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(23,5)), expr.MemberE("b", expr.VarE("", Loc(23,5)), Loc(23,5)), Loc(23,5)),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(23,5)), expr.BinaryE(expr.VarE("v:main:t.3", Loc(23,5)), op.BO_NE, expr.LitE(2, Loc(23,12)), Loc(23,5)), Loc(23,5)),
            instr.CondI(expr.VarE("v:main:t.4", Loc(23,5)), "IfTrue2", "IfFalse2", Loc(23,5)),
            instr.LabelI("IfTrue2"),
            instr.ReturnI(expr.LitE(2, Loc(24,10))),
            instr.GotoI("IfExit2"),
            instr.LabelI("IfFalse2"),
            instr.LabelI("IfExit2"),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(25,5)), expr.LitE(1, Loc(25,5)), Loc(25,5)),
            instr.AssignI(expr.VarE("v:main:t.6", Loc(25,5)), expr.MemberE("c", expr.MemberE("", expr.VarE("", Loc(25,5)), Loc(25,5)), Loc(25,5)), Loc(25,5)),
            instr.CondI(expr.BinaryE(expr.VarE("v:main:t.6", Loc(25,5)), op.BO_NE, expr.LitE(3, Loc(25,12)), Loc(25,5)), "ExitLor4", "NextCheckLor4", Loc(25,5)),
            instr.LabelI("NextCheckLor4"),
            instr.AssignI(expr.VarE("v:main:t.7", Loc(25,17)), expr.MemberE("d", expr.MemberE("", expr.VarE("", Loc(25,17)), Loc(25,17)), Loc(25,17)), Loc(25,17)),
            instr.CondI(expr.BinaryE(expr.VarE("v:main:t.7", Loc(25,17)), op.BO_NE, expr.LitE(3, Loc(25,24)), Loc(25,17)), "ExitLor4", "TmpAssignLor4", Loc(25,5)),
            instr.LabelI("TmpAssignLor4"),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(25,5)), expr.LitE(0, Loc(25,5)), Loc(25,5)),
            instr.LabelI("ExitLor4"),
            instr.CondI(expr.VarE("v:main:t.5", Loc(25,5)), "IfTrue3", "IfFalse3", Loc(25,5)),
            instr.LabelI("IfTrue3"),
            instr.ReturnI(expr.LitE(3, Loc(26,10))),
            instr.GotoI("IfExit3"),
            instr.LabelI("IfFalse3"),
            instr.LabelI("IfExit3"),
            instr.AssignI(expr.VarE("v:main:t.8", Loc(27,5)), expr.MemberE("a", expr.MemberE("s", expr.VarE("", Loc(27,5)), Loc(27,5)), Loc(27,5)), Loc(27,5)),
            instr.AssignI(expr.VarE("v:main:t.9", Loc(27,5)), expr.BinaryE(expr.VarE("v:main:t.8", Loc(27,5)), op.BO_NE, expr.LitE(4, Loc(27,14)), Loc(27,5)), Loc(27,5)),
            instr.CondI(expr.VarE("v:main:t.9", Loc(27,5)), "IfTrue5", "IfFalse5", Loc(27,5)),
            instr.LabelI("IfTrue5"),
            instr.ReturnI(expr.LitE(4, Loc(28,10))),
            instr.GotoI("IfExit5"),
            instr.LabelI("IfFalse5"),
            instr.LabelI("IfExit5"),
            instr.AssignI(expr.VarE("v:main:t.10", Loc(29,5)), expr.MemberE("b", expr.MemberE("s", expr.VarE("", Loc(29,5)), Loc(29,5)), Loc(29,5)), Loc(29,5)),
            instr.AssignI(expr.VarE("v:main:t.11", Loc(29,5)), expr.BinaryE(expr.VarE("v:main:t.10", Loc(29,5)), op.BO_NE, expr.LitE(5, Loc(29,14)), Loc(29,5)), Loc(29,5)),
            instr.CondI(expr.VarE("v:main:t.11", Loc(29,5)), "IfTrue6", "IfFalse6", Loc(29,5)),
            instr.LabelI("IfTrue6"),
            instr.ReturnI(expr.LitE(5, Loc(30,10))),
            instr.GotoI("IfExit6"),
            instr.LabelI("IfFalse6"),
            instr.LabelI("IfExit6"),
            instr.ReturnI(expr.LitE(0, Loc(32,9))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
