
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "002060.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(13,5)), [expr.LitE("""abort = %s
""", Loc(13,12)), expr.LitE("""111""", Loc(13,28))], Loc(13,5)), Loc(13,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(18,5)), [expr.LitE("""abort = %s
""", Loc(18,12)), expr.LitE("""222""", Loc(18,28))], Loc(18,5)), Loc(18,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(23,5)), [expr.LitE("""abort = %s
""", Loc(23,12)), expr.LitE("""333""", Loc(23,28))], Loc(23,5)), Loc(23,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(26,5)), [expr.LitE("""abort = %s
""", Loc(26,12)), expr.LitE("""222""", Loc(26,28))], Loc(26,5)), Loc(26,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(29,5)), [expr.LitE("""abort = %s
""", Loc(29,12)), expr.LitE("""111""", Loc(29,28))], Loc(29,5)), Loc(29,5)),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
