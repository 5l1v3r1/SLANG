
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001960.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.12": types.Int32,
    "v:main:t.11": types.Int32,
    "v:main:t.10": types.Int32,
    "v:main:t.9": types.Int32,
    "v:main:t.8": types.Int32,
    "v:main:t.7": types.Int32,
    "v:main:t.2": types.Int32,
    "v:main:t.1": types.Int32,
    "v:main:t.3": types.Int32,
    "v:main:t.4": types.Int32,
    "v:main:t.5": types.Int32,
    "v:main:t.6": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:fred":
      obj.Func(
        name = "f:fred",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(5,4)), [expr.LitE("""fred
""", Loc(5,11))], Loc(5,4)), Loc(5,4)),
            instr.ReturnI(expr.LitE(0, Loc(6,11))),
        ], # instrSeq end.
      ), # f:fred() end. 

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:t.1", Loc(17,19)), expr.LitE(1, Loc(17,19)), Loc(17,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(17,19)), Loc(17,19)), "NextCheckLand1", "TmpAssignLand1", Loc(17,19)),
            instr.LabelI("NextCheckLand1"),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(17,29)), Loc(17,29)), "ExitLand1", "TmpAssignLand1", Loc(17,19)),
            instr.LabelI("TmpAssignLand1"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(17,19)), expr.LitE(0, Loc(17,19)), Loc(17,19)),
            instr.LabelI("ExitLand1"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(17,4)), [expr.LitE("""%d
""", Loc(17,11)), expr.VarE("v:main:t.1", Loc(17,19))], Loc(17,4)), Loc(17,4)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(18,19)), expr.LitE(1, Loc(18,19)), Loc(18,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(18,19)), Loc(18,19)), "ExitLor2", "NextCheckLor2", Loc(18,19)),
            instr.LabelI("NextCheckLor2"),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(18,29)), Loc(18,29)), "ExitLor2", "TmpAssignLor2", Loc(18,19)),
            instr.LabelI("TmpAssignLor2"),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(18,19)), expr.LitE(0, Loc(18,19)), Loc(18,19)),
            instr.LabelI("ExitLor2"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(18,4)), [expr.LitE("""%d
""", Loc(18,11)), expr.VarE("v:main:t.2", Loc(18,19))], Loc(18,4)), Loc(18,4)),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(19,19)), expr.LitE(1, Loc(19,19)), Loc(19,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(19,19)), Loc(19,19)), "NextCheckLand3", "TmpAssignLand3", Loc(19,19)),
            instr.LabelI("NextCheckLand3"),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(19,28)), Loc(19,28)), "ExitLand3", "TmpAssignLand3", Loc(19,19)),
            instr.LabelI("TmpAssignLand3"),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(19,19)), expr.LitE(0, Loc(19,19)), Loc(19,19)),
            instr.LabelI("ExitLand3"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(19,4)), [expr.LitE("""%d
""", Loc(19,11)), expr.VarE("v:main:t.3", Loc(19,19))], Loc(19,4)), Loc(19,4)),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(20,19)), expr.LitE(1, Loc(20,19)), Loc(20,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(20,19)), Loc(20,19)), "ExitLor4", "NextCheckLor4", Loc(20,19)),
            instr.LabelI("NextCheckLor4"),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(20,28)), Loc(20,28)), "ExitLor4", "TmpAssignLor4", Loc(20,19)),
            instr.LabelI("TmpAssignLor4"),
            instr.AssignI(expr.VarE("v:main:t.4", Loc(20,19)), expr.LitE(0, Loc(20,19)), Loc(20,19)),
            instr.LabelI("ExitLor4"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(20,4)), [expr.LitE("""%d
""", Loc(20,11)), expr.VarE("v:main:t.4", Loc(20,19))], Loc(20,4)), Loc(20,4)),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(21,19)), expr.LitE(1, Loc(21,19)), Loc(21,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(21,19)), Loc(21,19)), "NextCheckLand5", "TmpAssignLand5", Loc(21,19)),
            instr.LabelI("NextCheckLand5"),
            instr.AssignI(expr.VarE("v:main:t.6", Loc(21,34)), expr.CallE(expr.FuncE("f:joe", Loc(21,34)), Loc(21,34)), Loc(21,34)),
            instr.CondI(expr.BinaryE(expr.LitE(1, Loc(21,30)), op.BO_ADD, expr.VarE("v:main:t.6", Loc(21,34)), Loc(21,30)), "ExitLand5", "TmpAssignLand5", Loc(21,19)),
            instr.LabelI("TmpAssignLand5"),
            instr.AssignI(expr.VarE("v:main:t.5", Loc(21,19)), expr.LitE(0, Loc(21,19)), Loc(21,19)),
            instr.LabelI("ExitLand5"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(21,4)), [expr.LitE("""%d
""", Loc(21,11)), expr.VarE("v:main:t.5", Loc(21,19))], Loc(21,4)), Loc(21,4)),
            instr.AssignI(expr.VarE("v:main:t.7", Loc(22,19)), expr.LitE(1, Loc(22,19)), Loc(22,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:fred", Loc(22,19)), Loc(22,19)), "ExitLor6", "NextCheckLor6", Loc(22,19)),
            instr.LabelI("NextCheckLor6"),
            instr.AssignI(expr.VarE("v:main:t.8", Loc(22,34)), expr.CallE(expr.FuncE("f:joe", Loc(22,34)), Loc(22,34)), Loc(22,34)),
            instr.CondI(expr.BinaryE(expr.LitE(0, Loc(22,30)), op.BO_ADD, expr.VarE("v:main:t.8", Loc(22,34)), Loc(22,30)), "ExitLor6", "TmpAssignLor6", Loc(22,19)),
            instr.LabelI("TmpAssignLor6"),
            instr.AssignI(expr.VarE("v:main:t.7", Loc(22,19)), expr.LitE(0, Loc(22,19)), Loc(22,19)),
            instr.LabelI("ExitLor6"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(22,4)), [expr.LitE("""%d
""", Loc(22,11)), expr.VarE("v:main:t.7", Loc(22,19))], Loc(22,4)), Loc(22,4)),
            instr.AssignI(expr.VarE("v:main:t.9", Loc(23,19)), expr.LitE(1, Loc(23,19)), Loc(23,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(23,19)), Loc(23,19)), "NextCheckLand7", "TmpAssignLand7", Loc(23,19)),
            instr.LabelI("NextCheckLand7"),
            instr.AssignI(expr.VarE("v:main:t.10", Loc(23,33)), expr.CallE(expr.FuncE("f:fred", Loc(23,33)), Loc(23,33)), Loc(23,33)),
            instr.CondI(expr.BinaryE(expr.LitE(0, Loc(23,29)), op.BO_ADD, expr.VarE("v:main:t.10", Loc(23,33)), Loc(23,29)), "ExitLand7", "TmpAssignLand7", Loc(23,19)),
            instr.LabelI("TmpAssignLand7"),
            instr.AssignI(expr.VarE("v:main:t.9", Loc(23,19)), expr.LitE(0, Loc(23,19)), Loc(23,19)),
            instr.LabelI("ExitLand7"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(23,4)), [expr.LitE("""%d
""", Loc(23,11)), expr.VarE("v:main:t.9", Loc(23,19))], Loc(23,4)), Loc(23,4)),
            instr.AssignI(expr.VarE("v:main:t.11", Loc(24,19)), expr.LitE(1, Loc(24,19)), Loc(24,19)),
            instr.CondI(expr.CallE(expr.FuncE("f:joe", Loc(24,19)), Loc(24,19)), "ExitLor8", "NextCheckLor8", Loc(24,19)),
            instr.LabelI("NextCheckLor8"),
            instr.AssignI(expr.VarE("v:main:t.12", Loc(24,33)), expr.CallE(expr.FuncE("f:fred", Loc(24,33)), Loc(24,33)), Loc(24,33)),
            instr.CondI(expr.BinaryE(expr.LitE(1, Loc(24,29)), op.BO_ADD, expr.VarE("v:main:t.12", Loc(24,33)), Loc(24,29)), "ExitLor8", "TmpAssignLor8", Loc(24,19)),
            instr.LabelI("TmpAssignLor8"),
            instr.AssignI(expr.VarE("v:main:t.11", Loc(24,19)), expr.LitE(0, Loc(24,19)), Loc(24,19)),
            instr.LabelI("ExitLor8"),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(24,4)), [expr.LitE("""%d
""", Loc(24,11)), expr.VarE("v:main:t.11", Loc(24,19))], Loc(24,4)), Loc(24,4)),
            instr.ReturnI(expr.LitE(0, Loc(26,11))),
        ], # instrSeq end.
      ), # f:main() end. 

    "f:joe":
      obj.Func(
        name = "f:joe",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(11,4)), [expr.LitE("""joe
""", Loc(11,11))], Loc(11,4)), Loc(11,4)),
            instr.ReturnI(expr.LitE(1, Loc(12,11))),
        ], # instrSeq end.
      ), # f:joe() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
