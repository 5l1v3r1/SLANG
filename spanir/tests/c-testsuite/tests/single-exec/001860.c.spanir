
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001860.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:t.2": types.Int32,
    "v:main:t.1": types.Int32,
    "v:main:Buf": types.ConstSizeArray(of=types.Int8, size=100),
    "v:main:Count": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:Count", Loc(8,9)), expr.LitE(1, Loc(8,17)), Loc(8,9)),
            instr.LabelI("ForCond1"),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(8,20)), expr.BinaryE(expr.VarE("v:main:Count", Loc(8,20)), op.BO_LE, expr.LitE(20, Loc(8,29)), Loc(8,20)), Loc(8,20)),
            instr.CondI(expr.VarE("v:main:t.1", Loc(8,20)), "ForBody1", "ForExit1", Loc(8,20)),
            instr.LabelI("ForBody1"),
            instr.CallI(expr.CallE(expr.FuncE("f:sprintf", Loc(10,7)), [expr.VarE("v:main:Buf", Loc(10,15)), expr.LitE("""->%02d<-
""", Loc(10,20)), expr.VarE("v:main:Count", Loc(10,34))], Loc(10,7)), Loc(10,7)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(11,7)), [expr.LitE("""%s""", Loc(11,14)), expr.VarE("v:main:Buf", Loc(11,20))], Loc(11,7)), Loc(11,7)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(8,33)), expr.VarE("v:main:Count", Loc(8,33)), Loc(8,33)),
            instr.AssignI(expr.VarE("v:main:Count", Loc(8,33)), expr.BinaryE(expr.VarE("v:main:Count", Loc(8,33)), op.BO_ADD, expr.LitE(1, Loc(8,33)), Loc(8,33)), Loc(8,33)),
            instr.GotoI("ForCond1"),
            instr.LabelI("ForExit1"),
            instr.ReturnI(expr.LitE(0, Loc(14,11))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
