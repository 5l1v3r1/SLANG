
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "001280.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:k": types.UInt32,
    "v:i": types.UInt32,
    "v:h": types.Int32,
    "v:g": types.UInt32,
    "v:a": types.Int32,
    "v:j": types.Int32,
    "v:b": types.UInt32,
    "v:c": types.Int8,
    "v:d": types.Int8,
    "v:e": types.UInt8,
    "v:f": types.Int32,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        basicBlocks = {
          0: [
            instr.NopI(),
          ],

          -1: [
            instr.NopI(),
          ],

          1: [
            instr.AssignI(expr.VarE("v:a", Loc(17,2)), expr.VarE("v:b", Loc(17,6)), Loc(17,2)),
            instr.AssignI(expr.VarE("v:a", Loc(18,2)), expr.VarE("v:c", Loc(18,6)), Loc(18,2)),
            instr.AssignI(expr.VarE("v:a", Loc(19,2)), expr.VarE("v:d", Loc(19,6)), Loc(19,2)),
            instr.AssignI(expr.VarE("v:a", Loc(20,2)), expr.VarE("v:e", Loc(20,6)), Loc(20,2)),
            instr.AssignI(expr.VarE("v:a", Loc(21,2)), expr.VarE("v:f", Loc(21,6)), Loc(21,2)),
            instr.AssignI(expr.VarE("v:a", Loc(22,2)), expr.VarE("v:g", Loc(22,6)), Loc(22,2)),
            instr.AssignI(expr.VarE("v:a", Loc(23,2)), expr.VarE("v:h", Loc(23,6)), Loc(23,2)),
            instr.AssignI(expr.VarE("v:a", Loc(24,2)), expr.VarE("v:i", Loc(24,6)), Loc(24,2)),
            instr.AssignI(expr.VarE("v:a", Loc(25,2)), expr.VarE("v:j", Loc(25,6)), Loc(25,2)),
            instr.AssignI(expr.VarE("v:a", Loc(26,2)), expr.VarE("v:k", Loc(26,6)), Loc(26,2)),
            instr.AssignI(expr.VarE("v:b", Loc(28,2)), expr.VarE("v:a", Loc(28,6)), Loc(28,2)),
            instr.AssignI(expr.VarE("v:b", Loc(29,2)), expr.VarE("v:c", Loc(29,6)), Loc(29,2)),
            instr.AssignI(expr.VarE("v:b", Loc(30,2)), expr.VarE("v:d", Loc(30,6)), Loc(30,2)),
            instr.AssignI(expr.VarE("v:b", Loc(31,2)), expr.VarE("v:e", Loc(31,6)), Loc(31,2)),
            instr.AssignI(expr.VarE("v:b", Loc(32,2)), expr.VarE("v:f", Loc(32,6)), Loc(32,2)),
            instr.AssignI(expr.VarE("v:b", Loc(33,2)), expr.VarE("v:g", Loc(33,6)), Loc(33,2)),
            instr.AssignI(expr.VarE("v:b", Loc(34,2)), expr.VarE("v:h", Loc(34,6)), Loc(34,2)),
            instr.AssignI(expr.VarE("v:b", Loc(35,2)), expr.VarE("v:i", Loc(35,6)), Loc(35,2)),
            instr.AssignI(expr.VarE("v:b", Loc(36,2)), expr.VarE("v:j", Loc(36,6)), Loc(36,2)),
            instr.AssignI(expr.VarE("v:b", Loc(37,2)), expr.VarE("v:k", Loc(37,6)), Loc(37,2)),
            instr.AssignI(expr.VarE("v:c", Loc(39,2)), expr.VarE("v:a", Loc(39,6)), Loc(39,2)),
            instr.AssignI(expr.VarE("v:c", Loc(40,2)), expr.VarE("v:b", Loc(40,6)), Loc(40,2)),
            instr.AssignI(expr.VarE("v:c", Loc(41,2)), expr.VarE("v:d", Loc(41,6)), Loc(41,2)),
            instr.AssignI(expr.VarE("v:c", Loc(42,2)), expr.VarE("v:e", Loc(42,6)), Loc(42,2)),
            instr.AssignI(expr.VarE("v:c", Loc(43,2)), expr.VarE("v:f", Loc(43,6)), Loc(43,2)),
            instr.AssignI(expr.VarE("v:c", Loc(44,2)), expr.VarE("v:g", Loc(44,6)), Loc(44,2)),
            instr.AssignI(expr.VarE("v:c", Loc(45,2)), expr.VarE("v:h", Loc(45,6)), Loc(45,2)),
            instr.AssignI(expr.VarE("v:c", Loc(46,2)), expr.VarE("v:i", Loc(46,6)), Loc(46,2)),
            instr.AssignI(expr.VarE("v:c", Loc(47,2)), expr.VarE("v:j", Loc(47,6)), Loc(47,2)),
            instr.AssignI(expr.VarE("v:c", Loc(48,2)), expr.VarE("v:k", Loc(48,6)), Loc(48,2)),
            instr.AssignI(expr.VarE("v:d", Loc(50,2)), expr.VarE("v:a", Loc(50,6)), Loc(50,2)),
            instr.AssignI(expr.VarE("v:d", Loc(51,2)), expr.VarE("v:b", Loc(51,6)), Loc(51,2)),
            instr.AssignI(expr.VarE("v:d", Loc(52,2)), expr.VarE("v:c", Loc(52,6)), Loc(52,2)),
            instr.AssignI(expr.VarE("v:d", Loc(53,2)), expr.VarE("v:e", Loc(53,6)), Loc(53,2)),
            instr.AssignI(expr.VarE("v:d", Loc(54,2)), expr.VarE("v:f", Loc(54,6)), Loc(54,2)),
            instr.AssignI(expr.VarE("v:d", Loc(55,2)), expr.VarE("v:g", Loc(55,6)), Loc(55,2)),
            instr.AssignI(expr.VarE("v:d", Loc(56,2)), expr.VarE("v:h", Loc(56,6)), Loc(56,2)),
            instr.AssignI(expr.VarE("v:d", Loc(57,2)), expr.VarE("v:i", Loc(57,6)), Loc(57,2)),
            instr.AssignI(expr.VarE("v:d", Loc(58,2)), expr.VarE("v:j", Loc(58,6)), Loc(58,2)),
            instr.AssignI(expr.VarE("v:d", Loc(59,2)), expr.VarE("v:k", Loc(59,6)), Loc(59,2)),
            instr.AssignI(expr.VarE("v:e", Loc(61,2)), expr.VarE("v:a", Loc(61,6)), Loc(61,2)),
            instr.AssignI(expr.VarE("v:e", Loc(62,2)), expr.VarE("v:b", Loc(62,6)), Loc(62,2)),
            instr.AssignI(expr.VarE("v:e", Loc(63,2)), expr.VarE("v:c", Loc(63,6)), Loc(63,2)),
            instr.AssignI(expr.VarE("v:e", Loc(64,2)), expr.VarE("v:d", Loc(64,6)), Loc(64,2)),
            instr.AssignI(expr.VarE("v:e", Loc(65,2)), expr.VarE("v:f", Loc(65,6)), Loc(65,2)),
            instr.AssignI(expr.VarE("v:e", Loc(66,2)), expr.VarE("v:g", Loc(66,6)), Loc(66,2)),
            instr.AssignI(expr.VarE("v:e", Loc(67,2)), expr.VarE("v:h", Loc(67,6)), Loc(67,2)),
            instr.AssignI(expr.VarE("v:e", Loc(68,2)), expr.VarE("v:i", Loc(68,6)), Loc(68,2)),
            instr.AssignI(expr.VarE("v:e", Loc(69,2)), expr.VarE("v:j", Loc(69,6)), Loc(69,2)),
            instr.AssignI(expr.VarE("v:e", Loc(70,2)), expr.VarE("v:k", Loc(70,6)), Loc(70,2)),
            instr.AssignI(expr.VarE("v:f", Loc(72,2)), expr.VarE("v:a", Loc(72,6)), Loc(72,2)),
            instr.AssignI(expr.VarE("v:f", Loc(73,2)), expr.VarE("v:b", Loc(73,6)), Loc(73,2)),
            instr.AssignI(expr.VarE("v:f", Loc(74,2)), expr.VarE("v:c", Loc(74,6)), Loc(74,2)),
            instr.AssignI(expr.VarE("v:f", Loc(75,2)), expr.VarE("v:d", Loc(75,6)), Loc(75,2)),
            instr.AssignI(expr.VarE("v:f", Loc(76,2)), expr.VarE("v:e", Loc(76,6)), Loc(76,2)),
            instr.AssignI(expr.VarE("v:f", Loc(77,2)), expr.VarE("v:g", Loc(77,6)), Loc(77,2)),
            instr.AssignI(expr.VarE("v:f", Loc(78,2)), expr.VarE("v:h", Loc(78,6)), Loc(78,2)),
            instr.AssignI(expr.VarE("v:f", Loc(79,2)), expr.VarE("v:i", Loc(79,6)), Loc(79,2)),
            instr.AssignI(expr.VarE("v:f", Loc(80,2)), expr.VarE("v:j", Loc(80,6)), Loc(80,2)),
            instr.AssignI(expr.VarE("v:f", Loc(81,2)), expr.VarE("v:k", Loc(81,6)), Loc(81,2)),
            instr.AssignI(expr.VarE("v:g", Loc(83,2)), expr.VarE("v:a", Loc(83,6)), Loc(83,2)),
            instr.AssignI(expr.VarE("v:g", Loc(84,2)), expr.VarE("v:b", Loc(84,6)), Loc(84,2)),
            instr.AssignI(expr.VarE("v:g", Loc(85,2)), expr.VarE("v:c", Loc(85,6)), Loc(85,2)),
            instr.AssignI(expr.VarE("v:g", Loc(86,2)), expr.VarE("v:d", Loc(86,6)), Loc(86,2)),
            instr.AssignI(expr.VarE("v:g", Loc(87,2)), expr.VarE("v:e", Loc(87,6)), Loc(87,2)),
            instr.AssignI(expr.VarE("v:g", Loc(88,2)), expr.VarE("v:f", Loc(88,6)), Loc(88,2)),
            instr.AssignI(expr.VarE("v:g", Loc(89,2)), expr.VarE("v:h", Loc(89,6)), Loc(89,2)),
            instr.AssignI(expr.VarE("v:g", Loc(90,2)), expr.VarE("v:i", Loc(90,6)), Loc(90,2)),
            instr.AssignI(expr.VarE("v:g", Loc(91,2)), expr.VarE("v:j", Loc(91,6)), Loc(91,2)),
            instr.AssignI(expr.VarE("v:g", Loc(92,2)), expr.VarE("v:k", Loc(92,6)), Loc(92,2)),
            instr.AssignI(expr.VarE("v:h", Loc(94,2)), expr.VarE("v:a", Loc(94,6)), Loc(94,2)),
            instr.AssignI(expr.VarE("v:h", Loc(95,2)), expr.VarE("v:b", Loc(95,6)), Loc(95,2)),
            instr.AssignI(expr.VarE("v:h", Loc(96,2)), expr.VarE("v:c", Loc(96,6)), Loc(96,2)),
            instr.AssignI(expr.VarE("v:h", Loc(97,2)), expr.VarE("v:d", Loc(97,6)), Loc(97,2)),
            instr.AssignI(expr.VarE("v:h", Loc(98,2)), expr.VarE("v:e", Loc(98,6)), Loc(98,2)),
            instr.AssignI(expr.VarE("v:h", Loc(99,2)), expr.VarE("v:f", Loc(99,6)), Loc(99,2)),
            instr.AssignI(expr.VarE("v:h", Loc(100,2)), expr.VarE("v:g", Loc(100,6)), Loc(100,2)),
            instr.AssignI(expr.VarE("v:h", Loc(101,2)), expr.VarE("v:i", Loc(101,6)), Loc(101,2)),
            instr.AssignI(expr.VarE("v:h", Loc(102,2)), expr.VarE("v:j", Loc(102,6)), Loc(102,2)),
            instr.AssignI(expr.VarE("v:h", Loc(103,2)), expr.VarE("v:k", Loc(103,6)), Loc(103,2)),
            instr.AssignI(expr.VarE("v:i", Loc(105,2)), expr.VarE("v:a", Loc(105,6)), Loc(105,2)),
            instr.AssignI(expr.VarE("v:i", Loc(106,2)), expr.VarE("v:b", Loc(106,6)), Loc(106,2)),
            instr.AssignI(expr.VarE("v:i", Loc(107,2)), expr.VarE("v:c", Loc(107,6)), Loc(107,2)),
            instr.AssignI(expr.VarE("v:i", Loc(108,2)), expr.VarE("v:d", Loc(108,6)), Loc(108,2)),
            instr.AssignI(expr.VarE("v:i", Loc(109,2)), expr.VarE("v:e", Loc(109,6)), Loc(109,2)),
            instr.AssignI(expr.VarE("v:i", Loc(110,2)), expr.VarE("v:f", Loc(110,6)), Loc(110,2)),
            instr.AssignI(expr.VarE("v:i", Loc(111,2)), expr.VarE("v:g", Loc(111,6)), Loc(111,2)),
            instr.AssignI(expr.VarE("v:i", Loc(112,2)), expr.VarE("v:h", Loc(112,6)), Loc(112,2)),
            instr.AssignI(expr.VarE("v:i", Loc(113,2)), expr.VarE("v:j", Loc(113,6)), Loc(113,2)),
            instr.AssignI(expr.VarE("v:i", Loc(114,2)), expr.VarE("v:k", Loc(114,6)), Loc(114,2)),
            instr.AssignI(expr.VarE("v:j", Loc(116,2)), expr.VarE("v:a", Loc(116,6)), Loc(116,2)),
            instr.AssignI(expr.VarE("v:j", Loc(117,2)), expr.VarE("v:b", Loc(117,6)), Loc(117,2)),
            instr.AssignI(expr.VarE("v:j", Loc(118,2)), expr.VarE("v:c", Loc(118,6)), Loc(118,2)),
            instr.AssignI(expr.VarE("v:j", Loc(119,2)), expr.VarE("v:d", Loc(119,6)), Loc(119,2)),
            instr.AssignI(expr.VarE("v:j", Loc(120,2)), expr.VarE("v:e", Loc(120,6)), Loc(120,2)),
            instr.AssignI(expr.VarE("v:j", Loc(121,2)), expr.VarE("v:f", Loc(121,6)), Loc(121,2)),
            instr.AssignI(expr.VarE("v:j", Loc(122,2)), expr.VarE("v:g", Loc(122,6)), Loc(122,2)),
            instr.AssignI(expr.VarE("v:j", Loc(123,2)), expr.VarE("v:h", Loc(123,6)), Loc(123,2)),
            instr.AssignI(expr.VarE("v:j", Loc(124,2)), expr.VarE("v:i", Loc(124,6)), Loc(124,2)),
            instr.AssignI(expr.VarE("v:j", Loc(125,2)), expr.VarE("v:k", Loc(125,6)), Loc(125,2)),
            instr.AssignI(expr.VarE("v:k", Loc(127,2)), expr.VarE("v:a", Loc(127,6)), Loc(127,2)),
            instr.AssignI(expr.VarE("v:k", Loc(128,2)), expr.VarE("v:b", Loc(128,6)), Loc(128,2)),
            instr.AssignI(expr.VarE("v:k", Loc(129,2)), expr.VarE("v:c", Loc(129,6)), Loc(129,2)),
            instr.AssignI(expr.VarE("v:k", Loc(130,2)), expr.VarE("v:d", Loc(130,6)), Loc(130,2)),
            instr.AssignI(expr.VarE("v:k", Loc(131,2)), expr.VarE("v:e", Loc(131,6)), Loc(131,2)),
            instr.AssignI(expr.VarE("v:k", Loc(132,2)), expr.VarE("v:f", Loc(132,6)), Loc(132,2)),
            instr.AssignI(expr.VarE("v:k", Loc(133,2)), expr.VarE("v:g", Loc(133,6)), Loc(133,2)),
            instr.AssignI(expr.VarE("v:k", Loc(134,2)), expr.VarE("v:h", Loc(134,6)), Loc(134,2)),
            instr.AssignI(expr.VarE("v:k", Loc(135,2)), expr.VarE("v:j", Loc(135,6)), Loc(135,2)),
            instr.AssignI(expr.VarE("v:k", Loc(136,2)), expr.VarE("v:i", Loc(136,6)), Loc(136,2)),
            instr.ReturnI(expr.LitE(0, Loc(138,9)), Loc(138,2)),
          ],

        }, # basicBlocks end.

        bbEdges= {
          (1, 0, types.UnCondEdge),
          (-1, 1, types.UnCondEdge),
        }, # bbEdges end
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
