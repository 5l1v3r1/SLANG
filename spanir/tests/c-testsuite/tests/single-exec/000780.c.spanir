
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "000780.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:v": types.ConstSizeArray(of=types.Int32, size=1000),
    "v:main:t.3": types.Int32,
    "v:main:s": types.Int8,
    "v:main:t.2": types.Int32,
    "v:f1:p": types.Ptr(to=types.Int8),
    "v:main:t.1": types.Ptr(to=types.Int8),
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:s", Loc(10,2)), expr.LitE(1, Loc(10,11)), Loc(10,2)),
            instr.AssignI(expr.VarE("v:main:t.1", Loc(14,9)), expr.UnaryE(op.UO_ADDROF, expr.VarE("v:main:s", Loc(14,10)), Loc(14,9)), Loc(14,9)),
            instr.AssignI(expr.VarE("v:main:t.2", Loc(14,6)), expr.CallE(expr.FuncE("f:f1", Loc(14,6)), [expr.VarE("v:main:t.1", Loc(14,9))], Loc(14,6)), Loc(14,6)),
            instr.AssignI(expr.VarE("v:main:t.3", Loc(14,6)), expr.BinaryE(expr.VarE("v:main:t.2", Loc(14,6)), op.BO_NE, expr.LitE(2, Loc(14,16)), Loc(14,6)), Loc(14,6)),
            instr.CondI(expr.VarE("v:main:t.3", Loc(14,6)), "IfTrue1", "IfFalse1", Loc(14,6)),
            instr.LabelI("IfTrue1"),
            instr.ReturnI(expr.LitE(1, Loc(15,10))),
            instr.GotoI("IfExit1"),
            instr.LabelI("IfFalse1"),
            instr.LabelI("IfExit1"),
            instr.ReturnI(expr.LitE(0, Loc(16,9))),
        ], # instrSeq end.
      ), # f:main() end. 

    "f:f1":
      obj.Func(
        name = "f:f1",
        paramNames = ["v:f1:p"],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:f1:t.1", Loc(4,9)), expr.UnaryE(op.UO_DEREF, expr.VarE("v:f1:p", Loc(4,10)), Loc(4,9)), Loc(4,9)),
            instr.AssignI(expr.VarE("v:f1:t.2", Loc(4,9)), expr.BinaryE(expr.VarE("v:f1:t.1", Loc(4,9)), op.BO_ADD, expr.LitE(1, Loc(4,12)), Loc(4,9)), Loc(4,9)),
            instr.ReturnI(expr.VarE("v:f1:t.2", Loc(4,9))),
        ], # instrSeq end.
      ), # f:f1() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
