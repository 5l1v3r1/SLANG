
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "002170.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:main:b": types.UInt32,
    "v:main:r": types.UInt32,
    "v:main:data": types.Ptr(to=types.Int8),
    "v:main:a": types.UInt32,
    "": ,
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:data", Loc(6,5)), expr.VarE("", Loc(6,18)), Loc(6,5)),
            instr.AssignI(expr.VarE("v:main:r", Loc(7,5)), expr.LitE(4, Loc(7,28)), Loc(7,5)),
            instr.AssignI(expr.VarE("v:main:a", Loc(8,5)), expr.LitE(5, Loc(8,18)), Loc(8,5)),
            instr.AssignI(expr.VarE("v:main:b", Loc(9,5)), expr.LitE(12, Loc(9,28)), Loc(9,5)),
            instr.CallI(expr.CallE(expr.FuncE("f:printf", Loc(13,5)), [expr.LitE("""data = "%s"
""", Loc(13,12)), expr.VarE("v:main:data", Loc(13,31))], Loc(13,5)), Loc(13,5)),
            instr.ReturnI(expr.LitE(0, Loc(14,12))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
