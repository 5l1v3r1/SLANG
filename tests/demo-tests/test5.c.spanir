
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "test5.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:cond": types.Int32,
    "v:main:b": types.Int32,
    "v:main:tmp": types.Int32,
    "v:main:t.if1": types.Int32,
    "v:main:a": types.Int32,
    "v:main:u": types.Ptr(to=types.Int32),
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = [],
        variadic = False,
        returnType = types.Int32,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:a", Loc(4,3)), expr.LitE(11, Loc(4,7)), Loc(4,3)),
            instr.AssignI(expr.VarE("v:main:b", Loc(5,3)), expr.LitE(13, Loc(5,7)), Loc(5,3)),
            instr.AssignI(expr.VarE("v:cond", Loc(6,3)), expr.LitE(10, Loc(6,10)), Loc(6,3)),
            instr.AssignI(expr.VarE("v:main:u", Loc(7,3)), expr.AddrOfE(expr.VarE("v:main:a", Loc(7,8)), Loc(7,7)), Loc(7,3)),
            instr.LabelI("WhileCond1"),
            instr.AssignI(expr.VarE("v:main:t.if1", Loc(9,9)), expr.BinaryE(expr.VarE("v:cond", Loc(9,9)), op.BO_GT, expr.LitE(1, Loc(9,16)), Loc(9,9)), Loc(9,9)),
            instr.CondI(expr.VarE("v:main:t.if1", Loc(9,9)), "WhileBody1", "WhileExit1", Loc(9,9)),
            instr.LabelI("WhileBody1"),
            instr.AssignI(expr.VarE("v:main:tmp", Loc(10,5)), expr.UnaryE(op.UO_DEREF, expr.VarE("v:main:u", Loc(10,12)), Loc(10,11)), Loc(10,5)),
            instr.AssignI(expr.VarE("v:main:b", Loc(11,5)), expr.BinaryE(expr.VarE("v:main:tmp", Loc(11,9)), op.BO_MOD, expr.LitE(2, Loc(11,15)), Loc(11,9)), Loc(11,5)),
            instr.CondI(expr.VarE("v:main:b", Loc(12,8)), "IfTrue2", "IfFalse2", Loc(12,8)),
            instr.LabelI("IfTrue2"),
            instr.AssignI(expr.VarE("v:main:b", Loc(13,7)), expr.LitE(15, Loc(13,11)), Loc(13,7)),
            instr.GotoI("IfExit2"),
            instr.LabelI("IfFalse2"),
            instr.AssignI(expr.VarE("v:main:b", Loc(15,7)), expr.LitE(16, Loc(15,11)), Loc(15,7)),
            instr.LabelI("IfExit2"),
            instr.AssignI(expr.VarE("v:main:u", Loc(17,5)), expr.AddrOfE(expr.VarE("v:main:b", Loc(17,10)), Loc(17,9)), Loc(17,5)),
            instr.GotoI("WhileCond1"),
            instr.LabelI("WhileExit1"),
            instr.ReturnI(expr.VarE("v:main:b", Loc(20,10))),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
