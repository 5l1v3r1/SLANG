
# START: A_SPAN_translation_unit.

# eval() the contents of this file.
# Keep the following imports in effect when calling eval.

# import span.ir.types as types
# import span.ir.expr as expr
# import span.ir.instr as instr
# import span.ir.obj as obj
# import span.ir.tunit as irTUnit
# from span.ir.types import Loc

# An instance of span.ir.tunit.TUnit class.
irTUnit.TUnit(
  name = "test1.c",
  description = "Auto-Translated from Clang AST.",

  allVars = {
    "v:g": types.Int32,
    "v:main:z": types.Int32,
    "v:main:x": types.Int32,
    "v:main:y": types.Int32,
    "v:main:argc": types.Int32,
    "v:main:argv": types.Ptr(to=types.Ptr(to=types.Int8)),
  }, # end allVars dict

  allObjs = {

    "f:main":
      obj.Func(
        name = "f:main",
        paramNames = ["v:main:argc", "v:main:argv"],
        variadic = False,
        returnType = types.Void,

        # Note: -1 is always start/entry BB. (REQUIRED)
        # Note: 0 is always end/exit BB (REQUIRED)
        instrSeq = [
            instr.AssignI(expr.VarE("v:main:x", Loc(9,3)), expr.LitE(10, Loc(9,11)), Loc(9,3)),
            instr.AssignI(expr.VarE("v:main:x", Loc(10,3)), expr.LitE(10, Loc(10,7)), Loc(10,3)),
            instr.AssignI(expr.VarE("v:main:y", Loc(11,3)), expr.LitE(20, Loc(11,7)), Loc(11,3)),
            instr.AssignI(expr.VarE("v:main:z", Loc(12,3)), expr.VarE("v:main:y", Loc(12,7)), Loc(12,3)),
            instr.AssignI(expr.VarE("v:g", Loc(13,3)), expr.VarE("v:main:z", Loc(13,7)), Loc(13,3)),
        ], # instrSeq end.
      ), # f:main() end. 

  }, # end allObjs dict
) # irTUnit.TUnit() ends

# END  : A_SPAN_translation_unit.
